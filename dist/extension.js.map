{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/firebase_options.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/generated/locales.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/main.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/constants/app_constant.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/constants/global_variables.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/constants/image_paths.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/constants/static_data.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/services/language/language_services.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/utils/custom_snackbar.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/utils/custom_snakbar.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/utils/shared_pref_helper.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/utils/validation.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/widgets/custom_button.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/widgets/custom_textfield.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/core/api_helper.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/core/failure.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/core/type_def.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/res/api_endpoints.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/res/strings.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/router/error_route.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/router/route_transition.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/router/routes.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/theme/app_theme.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/theme/color_scheme.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/theme/widget_theme/tab_bar_theme.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/theme/widget_theme/text_theme.ts","webpack://flutter-archichitecture/./src/extension.ts","webpack://flutter-archichitecture/external commonjs \"vscode\"","webpack://flutter-archichitecture/external node-commonjs \"fs\"","webpack://flutter-archichitecture/external node-commonjs \"path\"","webpack://flutter-archichitecture/webpack/bootstrap","webpack://flutter-archichitecture/webpack/startup"],"sourcesContent":["\r\n\r\nexport class firebase_options {\r\n  public static  fileTemplates: { [key: string]: string } = {\r\n    firebase_options: `\r\nimport 'package:firebase_core/firebase_core.dart' show FirebaseOptions;\r\nimport 'package:flutter/foundation.dart'\r\n    show defaultTargetPlatform, kIsWeb, TargetPlatform;\r\n\r\nclass DefaultFirebaseOptions {\r\n  static FirebaseOptions get currentPlatform {\r\n    if (kIsWeb) {\r\n      return web;\r\n    }\r\n    switch (defaultTargetPlatform) {\r\n      case TargetPlatform.android:\r\n        return android;\r\n      case TargetPlatform.iOS:\r\n        return ios;\r\n      case TargetPlatform.macOS:\r\n        throw UnsupportedError(\r\n          'DefaultFirebaseOptions have not been configured for macos - '\r\n          'you can reconfigure this by running the FlutterFire CLI again.',\r\n        );\r\n      case TargetPlatform.windows:\r\n        throw UnsupportedError(\r\n          'DefaultFirebaseOptions have not been configured for windows - '\r\n          'you can reconfigure this by running the FlutterFire CLI again.',\r\n        );\r\n      case TargetPlatform.linux:\r\n        throw UnsupportedError(\r\n          'DefaultFirebaseOptions have not been configured for linux - '\r\n          'you can reconfigure this by running the FlutterFire CLI again.',\r\n        );\r\n      default:\r\n        throw UnsupportedError(\r\n          'DefaultFirebaseOptions are not supported for this platform.',\r\n        );\r\n    }\r\n  }\r\n\r\n  static const FirebaseOptions web = FirebaseOptions(\r\n    apiKey: '',\r\n    appId: '',\r\n    messagingSenderId: '',\r\n    projectId: '',\r\n    authDomain: '',\r\n    storageBucket: '',\r\n    measurementId: '',\r\n  );\r\n\r\n  static const FirebaseOptions android = FirebaseOptions(\r\n    apiKey: '',\r\n    appId: '',\r\n    messagingSenderId: '',\r\n    projectId: \r\n    '',\r\n    storageBucket: '',\r\n  );\r\n\r\n  static const FirebaseOptions ios = FirebaseOptions(\r\n    apiKey: '',\r\n    appId: '',\r\n    messagingSenderId: '',\r\n    projectId: '',\r\n    storageBucket: '',\r\n    iosBundleId: '',\r\n  );\r\n}\r\n   `};\r\n}","export class locales {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\nlocales :  ` \r\nclass AppTranslation {\r\n  static Map<String, Map<String, String>> translations = {\r\n    'en_US': Locales.en_US,\r\n    // 'es_ES': Locales.es_ES,\r\n    // 'fr_FR': Locales.fr_FR,\r\n    // 'hi_IN': Locales.hi_IN,\r\n    // 'hy_AM': Locales.hy_AM,\r\n    // 'it_IT': Locales.it_IT,\r\n    // 'pt_PT': Locales.pt_PT,\r\n    // 'ru_RU': Locales.ru_RU,\r\n    // 'zh_CN': Locales.zh_CN,\r\n  };\r\n}\r\n\r\nclass LocaleKeys {\r\n  LocaleKeys._();\r\n  static const english_languages = 'english_languages';\r\n}\r\n\r\nclass Locales {\r\n  static const en_US = {\r\n    'english_languages': 'English',\r\n  };\r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n\r\n","export class AppFileTemplates {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    main: `\r\n// Main file template with a placeholder for fileName\r\nimport 'package:firebase_core/firebase_core.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:get/get.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:flutter_riverpod/flutter_riverpod.dart' as riverpod;\r\nimport 'package:loader_overlay/loader_overlay.dart';\r\nimport 'package:device_preview/device_preview.dart';\r\n\r\nimport '../../../../firebase_options.dart';\r\nimport '../../../../src/common/constants/global_variables.dart';\r\nimport '../../../../src/router/routes.dart';\r\nimport '../../../../src/theme/app_theme.dart';\r\nimport '../../../../generated/locales.g.dart';\r\nimport '../../../../src/common/utils/shared_pref_helper.dart';\r\n\r\nvoid main() async {\r\n  WidgetsFlutterBinding.ensureInitialized();\r\n  await Firebase.initializeApp(\r\n    options: DefaultFirebaseOptions.currentPlatform,\r\n  );\r\n  await SharedPrefHelper.getInitialValue();\r\n  runApp(\r\n    riverpod.ProviderScope(\r\n      child: MultiProvider(\r\n        providers: [\r\n          // ChangeNotifierProvider(create: (_) => LocationProvider()),\r\n        ],\r\n        child: const MyApp(),\r\n      ),\r\n    ),\r\n  );\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return GlobalLoaderOverlay(\r\n      child: Listener(\r\n        onPointerDown: (_) {\r\n          FocusScopeNode currentFocus = FocusScope.of(context);\r\n          if (!currentFocus.hasPrimaryFocus) {\r\n            currentFocus.focusedChild?.unfocus();\r\n          }\r\n        },\r\n        child: GetMaterialApp.router(\r\n          debugShowCheckedModeBanner: false,\r\n          translationsKeys: AppTranslation.translations,\r\n          fallbackLocale: const Locale('en', 'US'),\r\n          builder: DevicePreview.appBuilder,\r\n          theme: AppTheme.instance.theme,\r\n          routeInformationParser: MyAppRouter.router.routeInformationParser,\r\n          routerDelegate: MyAppRouter.router.routerDelegate,\r\n          routeInformationProvider: MyAppRouter.router.routeInformationProvider,\r\n          scaffoldMessengerKey: scaffoldMessengerKey,\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n    `,\r\n  };\r\n\r\n \r\n}\r\n","\r\n export class app_constant {\r\n  public static  fileTemplates: { [key: string]: string } = {\r\n    app_constant:  ` \r\n //const baseUrl = 'https://  com/api';`\r\n };\r\n}\r\n ","\r\n\r\n export class global_variables {\r\n  public static  fileTemplates: { [key: string]: string } = {\r\n    global_variables:  ` \r\n import 'package:flutter/material.dart';\r\n\r\nColorScheme colorScheme(context) => Theme.of(context).colorScheme;\r\n\r\nTextTheme textTheme(context) => Theme.of(context).textTheme;\r\n\r\nfinal scaffoldMessengerKey = GlobalKey<ScaffoldMessengerState>();\r\n\r\nconst String languageText = 'language';\r\nconst String isFirstTimeText = 'isFirstTime';\r\nconst String isIndividualText = 'isIndividual';\r\nconst String isLoggedInText = 'isLoggedIn';\r\nconst String isFormFilledText = 'isFormFilled';\r\nconst String isFormFilledIndexText = 'isFormFilledIndex';\r\nconst String tokenText = 'tokenText';\r\nconst String isUserInterestSelectedText = \"isUserInterestSelected\";\r\nconst String addressText = \"address\";\r\nconst String coordinatesLatitudeText = \"coordinatesLatitude\";\r\nconst String coordinatesLongitudeText = \"coordinatesLongitude\";`\r\n };\r\n}\r\n ","\r\nexport class image_paths {\r\n    public static  fileTemplates: { [key: string]: string } = {\r\n      image_paths:  ` class ImagePaths {\r\n  static const mapIcon = 'assets/icons/map_location.svg';\r\n  \r\n}`\r\n   };\r\n  }\r\n   \r\n\r\n\r\n","export class static_data {\r\n    public static  fileTemplates: { [key: string]: string } = {\r\n      static_data:  ` \r\n      \r\n  class StaticData {\r\n  static bool isFirstTime = true;\r\n  static bool isLoggedIn = false;\r\n  static String token = '';\r\n  static bool isIndividual = true;\r\n  static bool isFormFilled = false;\r\n  static bool isUserInterestSelected = false;\r\n  static int formIndex = 0;\r\n  static String language = '';\r\n  static int dashboardStartingIndex = 0;\r\n  static bool pricingPackageChoosen = false;\r\n\r\n  static String address = '';\r\n\r\n\r\n}`\r\n   };\r\n  }\r\n   \r\n\r\n\r\n\r\n\r\n","\r\nexport class language_services {\r\n  public static  fileTemplates: { [key: string]: string } = {\r\n    language_services:  `\r\n    \r\n\r\nimport 'dart:ui';\r\nimport '../../../../generated/locales.g.dart';\r\n\r\nclass LanguageServices {\r\n  LanguageServices._();\r\n  static final LanguageServices instance = LanguageServices._();\r\n\r\n  factory LanguageServices() {\r\n    return instance;\r\n  }\r\n\r\n  Locale onLanguageSelected(String selectedLanguage) {\r\n    switch (selectedLanguage.toLowerCase()) {\r\n      case LocaleKeys.english_languages:\r\n        return const Locale('en', 'US');\r\n      // case LocaleKeys.languages_portuguese:\r\n      //   return const Locale('pt', 'PT');\r\n      default:\r\n        return const Locale('en', 'US');\r\n    }\r\n  }\r\n\r\n\r\n}`\r\n };\r\n}\r\n \r\n\r\n\r\n\r\n","export class custom_snackbar {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\ncustom_snackbar :  ` \r\nimport '../../../../src/common/constants/global_variables.dart';\r\nimport '../../../../src/theme/app_theme.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nvoid showSnackbar({\r\n  VoidCallback? onPressed,\r\n  required String message,\r\n  IconData? icon,\r\n  Color? backgroundColor,\r\n  String? label,\r\n  bool isError = false,\r\n  bool closeButton = false,\r\n  double overflowThreshold = 1.0,\r\n  bool longActionLabel = false,\r\n  bool floatingType = true,\r\n  bool longLength = false,\r\n}) {\r\n  final appTheme = AppTheme.instance.theme;\r\n  final SnackBarAction? snackBarAction = label != null\r\n      ? SnackBarAction(\r\n          label: longActionLabel ? \"\" : label,\r\n          onPressed: onPressed ?? () {},\r\n        )\r\n      : null;\r\n\r\n  final snackBar = SnackBar(\r\n    content: Row(\r\n      children: [\r\n        Icon(\r\n          isError\r\n              ? icon ?? Icons.warning_amber_rounded\r\n              : Icons.done_all_rounded,\r\n          size: 25,\r\n          color: appTheme.colorScheme.surface,\r\n        ),\r\n        const SizedBox(width: 8),\r\n        Flexible(\r\n          child: Text(\r\n            message,\r\n            textAlign: TextAlign.start,\r\n            style: appTheme.textTheme.bodyMedium?.copyWith(\r\n              color: appTheme.colorScheme.surface,\r\n            ),\r\n          ),\r\n        ),\r\n      ],\r\n    ),\r\n    showCloseIcon: closeButton,\r\n    closeIconColor: appTheme.colorScheme.surface,\r\n    behavior: floatingType ? SnackBarBehavior.floating : SnackBarBehavior.fixed,\r\n    action: snackBarAction,\r\n    duration: Duration(milliseconds: !longLength ? 800 : 2000),\r\n    backgroundColor: isError\r\n        ? appTheme.colorScheme.error\r\n        : backgroundColor ?? const Color(0xFF424242),\r\n    shape: RoundedRectangleBorder(\r\n      borderRadius: BorderRadius.circular(10),\r\n    ),\r\n    actionOverflowThreshold: overflowThreshold,\r\n  );\r\n\r\n  scaffoldMessengerKey.currentState?.showSnackBar(snackBar);\r\n\r\n\r\n}`\r\n};\r\n }\r\n\r\n\r\n\r\n\r\n","export class custom_snakbar {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\n  custom_snakbar :  ` \r\nimport 'package:flutter/material.dart';\r\n\r\nenum SnackbarType { error, info, success }\r\n\r\nclass CustomSnackbar {\r\n  static void showSnackbar({\r\n    required BuildContext context,\r\n    required String message,\r\n    SnackbarType type = SnackbarType.info,\r\n    Duration duration = const Duration(seconds: 3),\r\n  }) {\r\n    Color backgroundColor;\r\n    IconData icon;\r\n\r\n    switch (type) {\r\n      case SnackbarType.error:\r\n        backgroundColor = Colors.red;\r\n        icon = Icons.error;\r\n        break;\r\n      case SnackbarType.info:\r\n        backgroundColor = Colors.blue;\r\n        icon = Icons.info;\r\n        break;\r\n      case SnackbarType.success:\r\n        backgroundColor = Colors.green;\r\n        icon = Icons.check_circle;\r\n        break;\r\n    }\r\n\r\n    final snackBar = SnackBar(\r\n      content: Row(\r\n        children: [\r\n          Icon(icon, color: Colors.white),\r\n          const SizedBox(width: 8.0),\r\n          Expanded(\r\n            child: Text(\r\n              message,\r\n              style: const TextStyle(color: Colors.white),\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n      backgroundColor: backgroundColor,\r\n      duration: duration,\r\n      behavior: SnackBarBehavior.floating,\r\n    );\r\n    ScaffoldMessenger.of(context).clearSnackBars();\r\n    ScaffoldMessenger.of(context).showSnackBar(snackBar);\r\n  }\r\n\r\n}`\r\n};\r\n }\r\n\r\n\r\n","export class shared_pref_helper {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\n  shared_pref_helper :  ` import '../../../../src/common/constants/global_variables.dart';\r\nimport 'package:google_maps_flutter/google_maps_flutter.dart';\r\nimport 'package:shared_preferences/shared_preferences.dart';\r\n import '../../../src/common/constants/static_data.dart';\r\n\r\n\r\nclass SharedPrefHelper {\r\n  static late SharedPreferences _prefs;\r\n\r\n  static getInitialValue() async {\r\n    _prefs = await SharedPreferences.getInstance();\r\n    StaticData.language = await getString(languageText) ?? '';\r\n    StaticData.isFirstTime = await getBool(isFirstTimeText) ?? true;\r\n    StaticData.isIndividual = await getBool(isIndividualText) ?? true;\r\n    StaticData.isLoggedIn = await getBool(isLoggedInText) ?? false;\r\n    StaticData.isFormFilled = await getBool(isFormFilledText) ?? false;\r\n    StaticData.isUserInterestSelected =\r\n        await getBool(isUserInterestSelectedText) ?? false;\r\n    StaticData.formIndex = await getInt(isFormFilledIndexText) ?? 0;\r\n    StaticData.token = await getString(tokenText) ?? '';\r\n    StaticData.address = await getString(addressText) ?? '';\r\n  \r\n  }\r\n\r\n  // Save a string value\r\n  static saveString(String key, String value) async {\r\n    await _prefs.setString(key, value);\r\n  }\r\n\r\n  // Retrieve a string value\r\n  static getString(String key) async {\r\n    return _prefs.getString(key);\r\n  }\r\n\r\n\r\n  \r\n\r\n  // Save a boolean value\r\n  static saveBool(String key, bool value) async {\r\n    await _prefs.setBool(key, value);\r\n  }\r\n\r\n  // Retrieve a boolean value\r\n  static getBool(String key) async {\r\n    return _prefs.getBool(key);\r\n  }\r\n\r\n  // Save an integer value\r\n  static saveInt(String key, int value) async {\r\n    await _prefs.setInt(key, value);\r\n  }\r\n\r\n  // Retrieve an integer value\r\n  static getInt(String key) async {\r\n    return _prefs.getInt(key);\r\n  }\r\n\r\n  // Save a double value\r\n  static saveDouble(String key, double value) async {\r\n    await _prefs.setDouble(key, value);\r\n  }\r\n\r\n  // Retrieve a double value\r\n  static getDouble(String key) async {\r\n    return _prefs.getDouble(key);\r\n  }\r\n\r\n  // Remove a value\r\n  static remove(String key) async {\r\n    await _prefs.remove(key);\r\n  }\r\n\r\n  // Clear all values\r\n  static clearAll() async {\r\n    await _prefs.clear();\r\n  }\r\n\r\n\r\n}`\r\n};\r\n }\r\n\r\n","\r\n\r\n\r\nexport class validation {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\nvalidation :  ` import '../../../../generated/locales.g.dart';\r\nimport 'package:get/get.dart';\r\n\r\nclass Validation {\r\n  static String? fieldValidation(String? value, String field) {\r\n    if (value == null || value.isEmpty) {\r\n      return '$/{LocaleKeys.validation_please_fill.tr/} $field';\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static String? emaiValidation(String? value) {\r\n    String pattern = r'^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[\\w-]{2,4}$';\r\n    RegExp regex = RegExp(pattern);\r\n    if (!regex.hasMatch(value!.trim())) {\r\n      return LocaleKeys.validation_please_enter_a_valid_email.tr;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static String? usernameValidation(String? value) {\r\n    if (value == null || value.isEmpty) {\r\n      return LocaleKeys.validation_please_enter_some_text.tr;\r\n    }\r\n    if (value.length < 3) {\r\n      return LocaleKeys\r\n          .validation_username_must_be_at_least_3_characters_long.tr;\r\n    }\r\n    if (value.length > 20) {\r\n      return LocaleKeys.validation_username_must_not_exceed_20_characters.tr;\r\n    }\r\n    if (!RegExp(r'^[a-zA-Z0-9._]+$').hasMatch(value)) {\r\n      return LocaleKeys\r\n          .validation_username_can_only_contain_letters_numbers_periods_and_underscores\r\n          .tr;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static String? passwordValidation(String? value) {\r\n    if (value == null || value.isEmpty) {\r\n      return LocaleKeys.validation_please_enter_a_password.tr;\r\n    }\r\n    if (value.length < 6) {\r\n      return LocaleKeys.validation_password_is_too_weak.tr;\r\n    }\r\n    // if (!value.contains(RegExp(r'[A-Z]'))) {\r\n    //   return 'Password must contain at least one uppercase letter';\r\n    // }\r\n    // if (!value.contains(RegExp(r'[a-z]'))) {\r\n    //   return 'Password must contain at least one lowercase letter';\r\n    // }\r\n    // if (!value.contains(RegExp(r'[0-9]'))) {\r\n    //   return 'Password must contain at least one digit';\r\n    // }\r\n    // if (!value.contains(RegExp(r'[!@#$%^&*(),.?\":{}|<>]'))) {\r\n    //   return 'Password must contain at least one special character';\r\n    // }\r\n    return null;\r\n  }\r\n\r\n  static String? confirmPasswordValidation(String? value, String password) {\r\n    String? passwordError = passwordValidation(password);\r\n    if (passwordError != null) {\r\n      return passwordError;\r\n    }\r\n\r\n    if (value == null || value.isEmpty) {\r\n      return LocaleKeys.validation_please_confirm_your_password.tr;\r\n    }\r\n    if (value != password) {\r\n      return LocaleKeys.validation_passwords_dont_match.tr;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static String? phoneNumberValidation(String? value) {\r\n    if (value == null || value.isEmpty) {\r\n      return LocaleKeys.validation_please_enter_a_phone_number.tr;\r\n    }\r\n    // RegExp regex = RegExp(r'^\\+\\d{1,3}\\d{10,14}$');\r\n    RegExp regex = RegExp(r'^\\d{10,12}$');\r\n    if (!regex.hasMatch(value)) {\r\n      return LocaleKeys.validation_please_enter_a_valid_phone_number.tr;\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n}`\r\n};\r\n }\r\n\r\n\r\n","export class custom_button {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\ncustom_button :  ` import '../../../../generated/locales.g.dart';\r\nimport '../../../../src/common/constants/global_variables.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:get/get.dart';\r\n\r\nclass CustomButton extends StatelessWidget {\r\n  final VoidCallback onPressed;\r\n  final String text;\r\n  final bool isIcon;\r\n  final Color? bgClr;\r\n  final Color? txtClr;\r\n  final bool isBorder;\r\n  const CustomButton({\r\n    super.key,\r\n    this.isIcon = false,\r\n    this.bgClr,\r\n    this.txtClr,\r\n    this.isBorder = false,\r\n    required this.onPressed,\r\n    this.text = LocaleKeys.button_next,\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return SizedBox(\r\n      width: MediaQuery.of(context).size.width * 0.9,\r\n      height: 50,\r\n      child: TextButton(\r\n        onPressed: onPressed,\r\n        style: TextButton.styleFrom(\r\n          backgroundColor: bgClr ?? colorScheme(context).primary,\r\n          shape: RoundedRectangleBorder(\r\n            borderRadius: BorderRadius.circular(10),\r\n            side: isBorder\r\n                ? BorderSide(color: colorScheme(context).primary)\r\n                : BorderSide.none,\r\n          ),\r\n        ),\r\n        child: Row(\r\n          mainAxisAlignment: MainAxisAlignment.center,\r\n          crossAxisAlignment: CrossAxisAlignment.center,\r\n          children: [\r\n            if (isIcon)\r\n              Icon(\r\n                Icons.send,\r\n                color: colorScheme(context).surface,\r\n              ),\r\n            const SizedBox(\r\n              width: 10,\r\n            ),\r\n            Flexible(\r\n              child: Text(\r\n                text.tr,\r\n                maxLines: 1,\r\n                overflow: TextOverflow.ellipsis,\r\n                style: textTheme(context).bodyLarge?.copyWith(\r\n                    color: txtClr ?? colorScheme(context).onPrimary,\r\n                    fontWeight: FontWeight.w700),\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n\r\n","export class custom_textfield {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\ncustom_textfield :  ` import 'package:flutter/material.dart';\r\nimport 'package:flutter/services.dart';\r\nimport '../constants/global_variables.t';\r\n\r\nclass CustomTextField extends StatelessWidget {\r\n  final String? hintText;\r\n  final TextEditingController? controller;\r\n  final void Function(String)? onChanged;\r\n  final Widget? suffixIcon;\r\n  final List<TextInputFormatter>? textInputFormatter;\r\n  final bool isVisibleText;\r\n  final Color? fillColor;\r\n  final FormFieldValidator<String>? validator;\r\n  final double? width;\r\n  final TextStyle? hintStyle;\r\n  final TextStyle? suffixStyle;\r\n  final IconData? iconData;\r\n  final int maxLines;\r\n  final TextInputType? keyboardType;\r\n  final bool? readOnly;\r\n  final bool? obscureText;\r\n\r\n  const CustomTextField({\r\n    super.key,\r\n    this.iconData,\r\n    this.controller,\r\n    this.textInputFormatter,\r\n    this.suffixStyle,\r\n    this.hintText,\r\n    this.fillColor,\r\n    this.isVisibleText = false,\r\n    this.readOnly = false,\r\n    this.hintStyle,\r\n    this.suffixIcon,\r\n    this.maxLines = 1,\r\n    this.keyboardType,\r\n    this.width,\r\n    this.onChanged,\r\n    this.obscureText = false,\r\n    this.validator,\r\n  });\r\n\r\n  @override\r\n  build(BuildContext context) {\r\n    return TextFormField(\r\n      validator: validator,\r\n      inputFormatters: textInputFormatter,\r\n      autovalidateMode: AutovalidateMode.onUserInteraction,\r\n      onChanged: onChanged,\r\n      controller: controller,\r\n      keyboardType: keyboardType,\r\n      maxLines: maxLines,\r\n      readOnly: readOnly!,\r\n      obscureText: obscureText!,\r\n      obscuringCharacter: '●',\r\n      style: textTheme(context).bodyMedium,\r\n      decoration: InputDecoration(\r\n        hintText: hintText,\r\n        hintStyle: hintStyle ??\r\n            textTheme(context)\r\n                .bodyMedium\r\n                ?.copyWith(color: colorScheme(context).outlineVariant),\r\n        fillColor: Colors.transparent,\r\n        contentPadding: EdgeInsets.all(20),\r\n        suffixIcon: suffixIcon,\r\n        suffixStyle: suffixStyle,\r\n        prefixIcon: iconData != null ? Icon(iconData) : null,\r\n        enabledBorder: OutlineInputBorder(\r\n            borderSide: BorderSide(\r\n                color: colorScheme(context).primaryContainer, width: 1),\r\n            borderRadius: BorderRadius.circular(18)),\r\n        focusedBorder: OutlineInputBorder(\r\n            borderSide: BorderSide(\r\n                color: colorScheme(context).primaryContainer, width: 1),\r\n            borderRadius: BorderRadius.circular(18)),\r\n        errorBorder: OutlineInputBorder(\r\n            borderSide: BorderSide(\r\n              color: colorScheme(context).error,\r\n              width: 1,\r\n            ),\r\n            borderRadius: BorderRadius.circular(18)),\r\n        focusedErrorBorder: OutlineInputBorder(\r\n            borderSide: BorderSide(\r\n              color: colorScheme(context).error,\r\n              width: 1,\r\n            ),\r\n            borderRadius: BorderRadius.circular(18)),\r\n        filled: true,\r\n        border: const OutlineInputBorder(borderSide: BorderSide.none),\r\n      ),\r\n    );\r\n  }\r\n\r\n\r\n}`\r\n};\r\n }\r\n\r\n","\r\nexport class api_helper {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\napi_helper :  `\r\n import 'dart:convert';\r\nimport 'dart:developer';\r\nimport 'package:flutter_riverpod/flutter_riverpod.dart';\r\nimport 'package:fpdart/fpdart.dart';\r\nimport 'package:http/http.dart';\r\nimport '../../../../src/res/strings.dart';\r\nimport '../common/providers/common_providers.dart';\r\nimport 'core.dart';\r\n\r\nfinal StateProvider<ApiHelper> apiHelperProvider = StateProvider((ref) {\r\n  final String? authToken = ref.watch(authTokenProvider);\r\n  print(\"Auth Token: $authToken\");\r\n  return ApiHelper(authToken: authToken);\r\n});\r\n\r\nclass ApiHelper {\r\n  final String? _authToken;\r\n\r\n  ApiHelper({required String? authToken}) : _authToken = authToken;\r\n\r\n  final Duration _timeoutDuration = const Duration(seconds: 10);\r\n\r\n  // Generic GET request\r\n  Future<Either<Failure, Response>> getRequest({\r\n    required String endpoint,\r\n    bool requireAuth = true,\r\n  }) async {\r\n    Map<String, String> headers = {\r\n      if (requireAuth) 'Authorization': 'Bearer $_authToken',\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    if (requireAuth && (_authToken?.isEmpty ?? true)) {\r\n      return Left(Failure(message: FailureMessage.authTokenEmpty));\r\n    }\r\n\r\n    log('REQUEST TO: $endpoint', name: LogLabel.httpGet);\r\n    try {\r\n      final response = await get(Uri.parse(endpoint), headers: headers)\r\n          .timeout(_timeoutDuration);\r\n      return Right(response);\r\n    } catch (e, stackTrace) {\r\n      return Left(\r\n        Failure(\r\n          message: FailureMessage.getRequestMessage,\r\n          stackTrace: stackTrace,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n\r\n  // Generic POST request\r\n  Future<Either<Failure, Response>> postRequest({\r\n    required String endpoint,\r\n    required dynamic data,\r\n    bool requireAuth = true,\r\n  }) async {\r\n    Map<String, String> headers = {\r\n      if (requireAuth) 'Authorization': 'Bearer $_authToken',\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    if (requireAuth && (_authToken?.isEmpty ?? true)) {\r\n      return Left(Failure(message: FailureMessage.authTokenEmpty));\r\n    }\r\n\r\n    log('REQUEST TO: $endpoint', name: LogLabel.httpPost);\r\n    try {\r\n      final response = await post(\r\n        Uri.parse(endpoint),\r\n        headers: headers,\r\n        body: jsonEncode(data),\r\n      ).timeout(_timeoutDuration);\r\n      return Right(response);\r\n    } catch (e, stackTrace) {\r\n      return Left(\r\n        Failure(\r\n          message: FailureMessage.postRequestMessage,\r\n          stackTrace: stackTrace,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n\r\n  // Generic PUT request\r\n  Future<Either<Failure, Response>> putRequest({\r\n    required String endpoint,\r\n    required dynamic data,\r\n    bool requireAuth = true,\r\n  }) async {\r\n    Map<String, String> headers = {\r\n      if (requireAuth) 'Authorization': 'Bearer $_authToken',\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    if (requireAuth && (_authToken?.isEmpty ?? true)) {\r\n      return Left(Failure(message: FailureMessage.authTokenEmpty));\r\n    }\r\n\r\n    log('REQUEST TO: $endpoint', name: LogLabel.httpPut);\r\n    try {\r\n      final response = await put(\r\n        Uri.parse(endpoint),\r\n        headers: headers,\r\n        body: jsonEncode(data),\r\n      ).timeout(_timeoutDuration);\r\n      return Right(response);\r\n    } catch (e, stackTrace) {\r\n      return Left(\r\n        Failure(\r\n          message: FailureMessage.putRequestMessage,\r\n          stackTrace: stackTrace,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n\r\n  // Generic DELETE request\r\n  Future<Either<Failure, Response>> deleteRequest({\r\n    required String endpoint,\r\n    required dynamic data,\r\n    bool requireAuth = true,\r\n  }) async {\r\n    Map<String, String> headers = {\r\n      if (requireAuth) 'Authorization': 'Bearer $_authToken',\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    if (requireAuth && (_authToken?.isEmpty ?? true)) {\r\n      return Left(Failure(message: FailureMessage.authTokenEmpty));\r\n    }\r\n\r\n    log('REQUEST TO: $endpoint', name: LogLabel.httpDelete);\r\n    try {\r\n      final response = await delete(\r\n        Uri.parse(endpoint),\r\n        headers: headers,\r\n        body: jsonEncode(data),\r\n      ).timeout(_timeoutDuration);\r\n      return Right(response);\r\n    } catch (e, stackTrace) {\r\n      return Left(\r\n        Failure(\r\n          message: FailureMessage.deleteRequestMessage,\r\n          stackTrace: stackTrace,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n}\r\n`\r\n};\r\n}","export class failure {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\nfailure :  ` \r\nclass Failure {\r\n  final String message;\r\n  final StackTrace stackTrace;\r\n\r\n  Failure({\r\n    required this.message,\r\n    this.stackTrace = StackTrace.empty,\r\n  });\r\n\r\n\r\n}`\r\n};\r\n }\r\n","\r\n\r\nexport class type_def {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\n    type_def :  ` import '../../../../src/core/failure.dart';\r\nimport 'package:fpdart/fpdart.dart';\r\nimport 'core.ts';\r\n\r\ntypedef FutureEither<T> = Future<Either<Failure, T>>;\r\ntypedef FutureVoid = Future<void>;\r\n\r\n\r\n`\r\n};\r\n }","\r\nexport class api_endpoints {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\napi_endpoints :  ` class ApiEndpoints {\r\n  static const baseUrl = 'https://.com/api/';\r\n  static const baseImageUrl = 'https://.com/';\r\n\r\n  static const signUp = baseUrl + 'sign-up';\r\n  static const signIn = baseUrl + 'sign-in';\r\n\r\n  // ***************************** USER ********************************\r\n  static const getUser = baseUrl + 'get-user';\r\n\r\n  \r\n  static getImageWithUrl(String image) {\r\n    return baseImageUrl + image;\r\n  }\r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n","\r\nexport class strings {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\nstrings :  ` class AppStrings {\r\n  static const appName = \"Riverpod app template\";\r\n}\r\n\r\nclass FailureMessage {\r\n  static const getRequestMessage = \"GET REQUEST FAILED\";\r\n  static const postRequestMessage = \"POST REQUEST FAILED\";\r\n  static const putRequestMessage = \"PUT REQUEST FAILED\";\r\n  static const deleteRequestMessage = \"DELETE REQUEST FAILED\";\r\n\r\n  static const jsonParsingFailed = \"FAILED TO PARSE JSON RESPONSE\";\r\n\r\n  static const authTokenEmpty = \"AUTH TOKEN EMPTY\";\r\n\r\n  static const failedToParseJson = \"Failed to Parse JSON Data\";\r\n}\r\n\r\nclass SnackBarMessages {\r\n  static const productLoadSuccess = \"Products Loaded Successfully\";\r\n  static const productLoadFailed = \"Failed To Load Products\";\r\n}\r\n\r\nclass LogLabel {\r\n  static const product = \"PRODUCT\";\r\n  static const auth = \"AUTH\";\r\n  static const httpGet = \"HTTP/GET\";\r\n  static const httpPost = \"HTTP/POST\";\r\n  static const httpPut = \"HTTP/PUT\";\r\n  static const httpDelete = \"HTTP/DELETE\";\r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n","\r\nexport class error_route {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\n  error_route :  ` import 'package:flutter/material.dart';\r\n\r\nclass ErrorPage extends StatelessWidget {\r\n  const ErrorPage({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        centerTitle: true,\r\n        title: const Text('ErrorPage router'),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n","\r\n\r\nexport class route_transition {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\nroute_transition :  ` import 'package:flutter/material.dart';\r\nimport 'package:go_router/go_router.dart';\r\n\r\nCustomTransitionPage buildPageWithDefaultTransition<T>({\r\n  required BuildContext context,\r\n  required GoRouterState state,\r\n  required Widget child,\r\n}) {\r\n  return CustomTransitionPage<T>(\r\n    key: state.pageKey,\r\n    child: child,\r\n    transitionsBuilder: (context, animation, secondaryAnimation, child) =>\r\n        SlideTransition(\r\n      position: Tween<Offset>(\r\n        begin: const Offset(1.0, 0.0),\r\n        end: Offset.zero,\r\n      ).animate(animation),\r\n      child: child,\r\n    ),\r\n  );\r\n}\r\n\r\nCustomTransitionPage buildPageWithFadeTransition<T>({\r\n  required BuildContext context,\r\n  required GoRouterState state,\r\n  required Widget child,\r\n}) {\r\n  return CustomTransitionPage<T>(\r\n    key: state.pageKey,\r\n    child: child,\r\n    transitionsBuilder: (context, animation, secondaryAnimation, child) =>\r\n        FadeTransition(\r\n      opacity: animation,\r\n      child: child,\r\n    ),\r\n  );\r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n","\r\nexport class routes {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\nroutes :  ` import '../../../../src/features/auth/pages/sign_in_page.dart';\r\nimport '../../../../src/features/auth/pages/sign_up_page.dart';\r\n\r\nclass MyAppRouter {\r\n  static final router = GoRouter(\r\n    initialLocation: '/',\r\n    routes: [\r\n      \r\n      GoRoute(\r\n        name: AppRoute.signin,\r\n        path: '/signin',\r\n        pageBuilder: (context, state) => buildPageWithFadeTransition<void>(\r\n            context: context, state: state, child: const SignInPage()),\r\n      ),\r\n      GoRoute(\r\n        name: AppRoute.signup,\r\n        path: '/signup',\r\n        pageBuilder: (context, state) => buildPageWithFadeTransition<void>(\r\n            context: context, state: state, child: const SignUpPage()),\r\n      ),\r\n     \r\n    ],\r\n    errorPageBuilder: (context, state) {\r\n      return const MaterialPage(child: ErrorPage());\r\n    },\r\n  );\r\n  static void clearAndNavigate(BuildContext context, String name) {\r\n    while (context.canPop() == true) {\r\n      context.pop();\r\n    }\r\n    context.pushReplacementNamed(name);\r\n  }\r\n}\r\n\r\nclass AppRoute {\r\n  \r\n  //auth\r\n  static const String signin = 'signin';\r\n  static const String signup = 'signup';\r\n  \r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n","\r\nexport class app_theme {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\napp_theme :  ` import '../../../../src/theme/widget_theme/text_theme.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'color_scheme.dart';\r\nimport 'widget_theme/tab_bar_theme.ts';\r\n\r\nclass AppTheme {\r\n  AppTheme._();\r\n\r\n  factory AppTheme() {\r\n    return instance;\r\n  }\r\n\r\n  static final AppTheme instance = AppTheme._();\r\n\r\n  ThemeData get theme => ThemeData(\r\n        useMaterial3: true,\r\n        textTheme: appTextTheme,\r\n        tabBarTheme: tabBarTheme,\r\n        dividerTheme: DividerThemeData(\r\n          color: appColorScheme.outlineVariant.withOpacity(0.1),\r\n        ),\r\n        splashColor: Colors.transparent,\r\n        colorScheme: appColorScheme,\r\n      );\r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n","\r\nexport class color_scheme {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\ncolor_scheme :  ` import 'package:flutter/material.dart';\r\n\r\nColorScheme get appColorScheme => const ColorScheme(\r\n      brightness: Brightness.light,\r\n      primary: Color(0xFF558AF0),\r\n      onPrimary: Colors.white,\r\n      primaryContainer: Color(0xffF0F5FA),\r\n      onPrimaryContainer: Color(0xff121223),\r\n      secondary: Color(0xff525FE1),\r\n      onSecondary: Colors.white,\r\n      outline: Color(0xFFF9F9F9),\r\n      outlineVariant: Color(0xFF858C95),\r\n      tertiary: Colors.amber,\r\n      onTertiary: Colors.white,\r\n      error: Colors.red,\r\n      onError: Colors.red,\r\n      surface: Colors.white,\r\n      onSurface: Colors.black,\r\n    );\r\n\r\n}`\r\n};\r\n }\r\n\r\n","\r\nexport class tab_bar_theme {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\ntab_bar_theme :  ` import '../../../../src/theme/color_scheme.dart';\r\nimport '../../../../src/theme/widget_theme/text_theme.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nTabBarTheme get tabBarTheme => TabBarTheme(\r\n      labelStyle: appTextTheme.bodyLarge?.copyWith(\r\n          color: appColorScheme.surface, fontWeight: FontWeight.w400),\r\n      unselectedLabelStyle: appTextTheme.bodyLarge?.copyWith(\r\n          color: appColorScheme.onPrimary.withOpacity(0.7),\r\n          fontWeight: FontWeight.w400),\r\n      indicatorSize: TabBarIndicatorSize.label,\r\n      indicatorColor: Colors.transparent,\r\n    );\r\n\r\n}`\r\n};\r\n }\r\n\r\n","\r\nexport class text_theme {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\ntext_theme :  ` import 'package:flutter/material.dart';\r\nimport 'package:google_fonts/google_fonts.dart';\r\n\r\nTextTheme get appTextTheme => TextTheme(\r\n      displayLarge: GoogleFonts.poppins(\r\n        fontSize: 57.0,\r\n        fontWeight: FontWeight.w400,\r\n        letterSpacing: -0.25,\r\n      ),\r\n      displayMedium: GoogleFonts.poppins(\r\n        fontSize: 45.0,\r\n        fontWeight: FontWeight.w400,\r\n      ),\r\n      displaySmall: GoogleFonts.poppins(\r\n        fontSize: 36.0,\r\n        fontWeight: FontWeight.w400,\r\n      ),\r\n      headlineLarge: GoogleFonts.poppins(\r\n        fontSize: 32.0,\r\n        fontWeight: FontWeight.w400,\r\n      ),\r\n      headlineMedium: GoogleFonts.poppins(\r\n        fontSize: 22.0,\r\n        fontWeight: FontWeight.w400,\r\n      ),\r\n      headlineSmall: GoogleFonts.poppins(\r\n        fontSize: 20.0,\r\n        fontWeight: FontWeight.bold,\r\n      ),\r\n      titleLarge: GoogleFonts.poppins(\r\n        fontSize: 22.0,\r\n        fontWeight: FontWeight.w500,\r\n      ),\r\n      titleMedium: GoogleFonts.poppins(\r\n        fontSize: 18.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 0.15,\r\n      ),\r\n      titleSmall: GoogleFonts.poppins(\r\n        fontSize: 16.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 0.1,\r\n      ),\r\n      bodyLarge: GoogleFonts.poppins(\r\n        fontSize: 14.0,\r\n        fontWeight: FontWeight.w400,\r\n        letterSpacing: 0.5,\r\n      ),\r\n      bodyMedium: GoogleFonts.poppins(\r\n        fontSize: 14.0,\r\n        fontWeight: FontWeight.w400,\r\n        letterSpacing: 0.25,\r\n      ),\r\n      bodySmall: GoogleFonts.poppins(\r\n        fontSize: 12.0,\r\n        fontWeight: FontWeight.w400,\r\n        letterSpacing: 0.4,\r\n      ),\r\n      labelLarge: GoogleFonts.poppins(\r\n        fontSize: 14.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 1.25,\r\n      ),\r\n      labelMedium: GoogleFonts.poppins(\r\n        fontSize: 12.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 1.25,\r\n      ),\r\n      labelSmall: GoogleFonts.poppins(\r\n        fontSize: 11.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 1.5,\r\n      ),\r\n    );\r\n\r\n}`\r\n};\r\n }\r\n\r\n","import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as _ from 'lodash';\nimport { firebase_options } from './dart_snippets/NextWayArchitecture/firebase_options';\nimport { AppFileTemplates } from './dart_snippets/NextWayArchitecture/main';\nimport { app_constant } from './dart_snippets/NextWayArchitecture/src/common/constants/app_constant';\nimport { global_variables } from './dart_snippets/NextWayArchitecture/src/common/constants/global_variables';\nimport { image_paths } from './dart_snippets/NextWayArchitecture/src/common/constants/image_paths';\nimport { static_data } from './dart_snippets/NextWayArchitecture/src/common/constants/static_data';\nimport { language_services } from './dart_snippets/NextWayArchitecture/src/common/services/language/language_services';\nimport { custom_snackbar } from './dart_snippets/NextWayArchitecture/src/common/utils/custom_snackbar';\nimport { custom_snakbar } from './dart_snippets/NextWayArchitecture/src/common/utils/custom_snakbar';\nimport { shared_pref_helper } from './dart_snippets/NextWayArchitecture/src/common/utils/shared_pref_helper';\nimport { validation } from './dart_snippets/NextWayArchitecture/src/common/utils/validation';\nimport { custom_button } from './dart_snippets/NextWayArchitecture/src/common/widgets/custom_button';\nimport { custom_textfield } from './dart_snippets/NextWayArchitecture/src/common/widgets/custom_textfield';\nimport { failure } from './dart_snippets/NextWayArchitecture/src/core/failure';\nimport { type_def } from './dart_snippets/NextWayArchitecture/src/core/type_def';\nimport { strings } from './dart_snippets/NextWayArchitecture/src/res/strings';\nimport { error_route } from './dart_snippets/NextWayArchitecture/src/router/error_route';\nimport { route_transition } from './dart_snippets/NextWayArchitecture/src/router/route_transition';\nimport { routes } from './dart_snippets/NextWayArchitecture/src/router/routes';\nimport { tab_bar_theme } from './dart_snippets/NextWayArchitecture/src/theme/widget_theme/tab_bar_theme';\nimport { text_theme } from './dart_snippets/NextWayArchitecture/src/theme/widget_theme/text_theme';\nimport { app_theme } from './dart_snippets/NextWayArchitecture/src/theme/app_theme';\nimport { color_scheme } from './dart_snippets/NextWayArchitecture/src/theme/color_scheme';\nimport { api_helper } from './dart_snippets/NextWayArchitecture/src/core/api_helper';\nimport { locales } from './dart_snippets/NextWayArchitecture/generated/locales';\nimport { api_endpoints } from './dart_snippets/NextWayArchitecture/src/res/api_endpoints';\n\nexport function activate(context: vscode.ExtensionContext) {\n  let disposable = vscode.commands.registerCommand('flutter-archichitecture.createNextWaysArchitecture', async () => {\n    \n    const fileTemplates: { [key: string]: string } = {\n      ...AppFileTemplates.fileTemplates,\n      ...firebase_options.fileTemplates,\n      ...locales.fileTemplates,\n      ...app_constant.fileTemplates,\n      ...global_variables.fileTemplates,\n      ...image_paths.fileTemplates,\n      ...static_data.fileTemplates,\n      ...language_services.fileTemplates,\n      ...custom_snackbar.fileTemplates,\n      ...custom_snakbar.fileTemplates,\n      ...shared_pref_helper.fileTemplates,\n      ...validation.fileTemplates,\n      ...custom_button.fileTemplates,\n      ...custom_textfield.fileTemplates,\n      ...api_endpoints.fileTemplates,\n      ...failure.fileTemplates,\n      ...type_def.fileTemplates,\n      ...api_helper.fileTemplates,\n      ...strings.fileTemplates,\n      ...error_route.fileTemplates,\n      ...route_transition.fileTemplates,\n      ...routes.fileTemplates,\n      ...tab_bar_theme.fileTemplates,\n      ...text_theme.fileTemplates,\n      ...app_theme.fileTemplates,\n      ...color_scheme.fileTemplates,\n    };\n\n    const workspaceFolders = vscode.workspace.workspaceFolders;\n\n    if (!workspaceFolders) {\n      vscode.window.showErrorMessage('No workspace folder found.');\n      return;\n    }\n\n    const rootPath = workspaceFolders[0].uri.fsPath;\n\n    const architecture = {\n      \"lib\": [\n        { \"files\": [\"main.dart\"] },\n        { \"files\": [\"firebase_options.dart\"] },\n        { \"folder\": \"generated\", \"files\": [\"locales.g.dart\"] },\n        { \"folder\": \"src\", \"files\": [] },\n        { \"folder\": \"src/common\", \"files\": [] },\n        { \"folder\": \"src/common/constants\", \"files\": [\"app_constant.dart\", \"global_variables.dart\", \"image_paths.dart\", \"static_data.dart\"] },\n        { \"folder\": \"src/common/providers\", \"files\": [] },\n        { \"folder\": \"src/common/services/language\", \"files\": [\"language_services.dart\"] },\n        { \"folder\": \"src/common/utils\", \"files\": [\"custom_snackbar.dart\", \"custom_snakbar.dart\",\"shared_pref_helper.dart\", \"validation.dart\"] },\n        { \"folder\": \"src/common/widgets\", \"files\": [\"custom_button.dart\",\"custom_textfield.dart\"] },\n        { \"folder\": \"src/features\", \"files\": [] },\n        { \"folder\": \"src/core\", \"files\": [\"api_helper.dart\",\"failure.dart\",\"type_def.dart\"] },\n        { \"folder\": \"src/models\", \"files\": [] },\n        { \"folder\": \"src/res\", \"files\": [\"api_endpoints.dart\",\"strings.dart\"] },\n        { \"folder\": \"src/router\", \"files\": [\"error_route.dart\", \"route_transition.dart\", \"routes.dart\"] },\n        { \"folder\": \"src/theme/widget_theme\", \"files\": [\"tab_bar_theme.dart\", \"text_theme.dart\"] },\n        { \"folder\": \"src/theme\", \"files\": [\"app_theme.dart\", \"color_scheme.dart\"] }\n      ]\n    };\n    \n    // Generate architecture files and folders\n    for (const folder of architecture.lib) {\n      const folderPath = folder.folder ? path.join(rootPath, 'lib', folder.folder) : path.join(rootPath, 'lib');\n      fs.mkdirSync(folderPath, { recursive: true });\n\n      for (const file of folder.files) {\n        const fileName = file.split('.')[0];\n        const fileContent = fileTemplates[fileName];\n        const filePath = path.join(folderPath, file);\n        fs.writeFileSync(filePath, fileContent, { flag: 'wx' });\n      }\n    }\n\n    // Call to update pubspec.yaml\n    updatePubspecYaml(rootPath);\n\n    vscode.window.showInformationMessage('Flutter architecture with Dart files created successfully!');\n  });\n\n  context.subscriptions.push(disposable);\n}\n\n// Function to update pubspec.yaml with required packages\nfunction updatePubspecYaml(rootPath: string) {\n  const requiredPackages: { [key: string]: string } = {\n    \"google_fonts\": \"^6.2.1\",\n    \"provider\": \"^6.1.2\",\n    \"device_preview\": \"^1.2.0\",\n    \"flutter_svg\": \"^2.0.10+1\",\n    \"google_maps_flutter\": \"^2.0.6\",\n    \"flutter_riverpod\": \"^2.0.0\",\n    \"image_picker\": \"^1.1.2\",\n    \"animated_toggle_switch\": \"^0.8.2\",\n    \"intl\": \"^0.19.0\",\n    \"step_progress_indicator\": \"^1.0.2\",\n    \"go_router\": \"^14.2.2\",\n    \"file_picker\": \"^8.0.6\",\n    \"dotted_border\": \"^2.1.0\",\n    \"like_button\": \"^2.0.5\",\n    \"url_launcher\": \"^6.3.0\",\n    \"dotted_decoration\": \"^2.0.0\",\n    \"get\": \"^4.6.6\",\n    \"loader_overlay\": \"^4.0.1\",\n    \"fpdart\": \"^1.1.0\",\n    \"google_sign_in\": \"^6.2.1\",\n    \"firebase_auth\": \"^5.1.4\",\n    \"firebase_core\": \"^3.3.0\",\n    \"flutter_animate\": \"^4.5.0\",\n    \"sign_in_with_apple\": \"^6.1.1\",\n    \"http\": \"^1.2.2\",\n    \"shared_preferences\": \"^2.3.2\",\n    \"country_code_picker\": \"^3.0.0\"\n  };\n\n  const pubspecPath = path.join(rootPath, 'pubspec.yaml');\n  \n  if (fs.existsSync(pubspecPath)) {\n    let pubspecContent = fs.readFileSync(pubspecPath, 'utf-8');\n\n    for (const [pkg, version] of Object.entries(requiredPackages)) {\n      if (!pubspecContent.includes(pkg)) {\n        pubspecContent += `\\n  ${pkg}: ${version}`;\n      }\n    }\n\n    fs.writeFileSync(pubspecPath, pubspecContent);\n    vscode.window.showInformationMessage('pubspec.yaml updated with required packages.');\n  } else {\n    vscode.window.showErrorMessage('pubspec.yaml not found.');\n  }\n}\n\nexport function deactivate() {\n  console.debug('Flutter Architecture Generator: Deactivated');\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["static","firebase_options","locales","main","app_constant","global_variables","image_paths","static_data","language_services","custom_snackbar","custom_snakbar","shared_pref_helper","validation","custom_button","custom_textfield","api_helper","failure","type_def","api_endpoints","strings","error_route","route_transition","routes","app_theme","color_scheme","tab_bar_theme","text_theme","context","disposable","vscode","commands","registerCommand","async","fileTemplates","AppFileTemplates","workspaceFolders","workspace","window","showErrorMessage","rootPath","uri","fsPath","architecture","folder","folderPath","path","join","fs","mkdirSync","recursive","file","files","fileContent","split","filePath","writeFileSync","flag","requiredPackages","pubspecPath","existsSync","pubspecContent","readFileSync","pkg","version","Object","entries","includes","showInformationMessage","updatePubspecYaml","subscriptions","push","console","debug","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}