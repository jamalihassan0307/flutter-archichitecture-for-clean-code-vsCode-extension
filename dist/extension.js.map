{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://flutter-archichitecture/./src/dart_snippets/MVCArchitecture/mvc_manager.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVCArchitecture/mvc_yamal_utils.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/app_url.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/color/color.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/components/internet_exception_widget.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/components/loading_widget.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/components/network_image_widget.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/components/round_button.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/extensions.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/routes/routes.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/routes/routes_name.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/configs/utils.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/data/app_exceptions.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/data/network/base_api_services.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/data/network/network_api_services.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/data/response/api_response.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/data/response/status.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/generated_plugin_registrant.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/importsManager.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/main.ts","webpack://flutter-archichitecture/./src/dart_snippets/MVVM/mvvm_yamal_utils.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/Features/controllers/feature_controller.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/Features/controllers/feature_state.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/Features/repository/feature_repository.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/ImportsManager.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/firebase_options.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/main.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/constants/app_constant.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/constants/global_variables.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/constants/image_paths.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/constants/static_data.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/utils/custom_snackbar.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/utils/custom_snakbar.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/utils/shared_pref_helper.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/utils/validation.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/widgets/custom_button.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/common/widgets/custom_textfield.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/router/error_route.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/router/route_transition.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/router/routes.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/theme/app_theme.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/theme/color_scheme.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/theme/widget_theme/tab_bar_theme.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/src/theme/widget_theme/text_theme.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/utils/feature_utils.ts","webpack://flutter-archichitecture/./src/dart_snippets/NextWayArchitecture/utils/yamal_utils.ts","webpack://flutter-archichitecture/./src/extension.ts","webpack://flutter-archichitecture/external commonjs \"vscode\"","webpack://flutter-archichitecture/external node-commonjs \"fs\"","webpack://flutter-archichitecture/external node-commonjs \"path\"","webpack://flutter-archichitecture/webpack/bootstrap","webpack://flutter-archichitecture/webpack/startup"],"sourcesContent":["import * as vscode from \"vscode\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { MVCYamalUtility } from \"./mvc_yamal_utils\";\r\n\r\nexport class MVCManager {\r\n  static fileTemplates = {\r\n    app_exceptions: `\r\nclass AppExceptions implements Exception {\r\n  final _message;\r\n  final _prefix;\r\n\r\n  AppExceptions([this._message, this._prefix]);\r\n\r\n  String toString() {\r\n    return '$_prefix$_message';\r\n  }\r\n}\r\n\r\nclass InternetException extends AppExceptions {\r\n  InternetException([String? message]) : super(message, 'No internet');\r\n}\r\n\r\nclass RequestTimeOut extends AppExceptions {\r\n  RequestTimeOut([String? message]) : super(message, 'Request Time out');\r\n}\r\n\r\nclass ServerException extends AppExceptions {\r\n  ServerException([String? message]) : super(message, 'Internal server error');\r\n}\r\n\r\nclass InvalidUrlException extends AppExceptions {\r\n  InvalidUrlException([String? message]) : super(message, 'Invalid Url');\r\n}\r\n\r\nclass FetchDataException extends AppExceptions {\r\n  FetchDataException([String? message]) : super(message, '');\r\n}`,\r\n\r\n    network_api_services: `\r\nimport 'dart:io';\r\nimport 'package:flutter/foundation.dart';\r\nimport 'package:dio/dio.dart' as dio;\r\nimport '../app_exceptions/app_exceptions.dart';\r\nimport 'api_store.dart';\r\nimport 'base_api_services.dart';\r\n\r\nclass NetworkApiServices extends BaseApiServices {\r\n  @override\r\n  Future<dynamic> getApi(String url) async {\r\n    if (kDebugMode) {\r\n      print(url);\r\n    }\r\n\r\n    dynamic responseJson;\r\n    try {\r\n      final response =\r\n          await httpClient().get(url).timeout(const Duration(seconds: 20));\r\n      responseJson = returnResponse(response);\r\n    } on SocketException {\r\n      throw InternetException('');\r\n    } on RequestTimeOut {\r\n      throw RequestTimeOut('');\r\n    }\r\n    print(responseJson);\r\n    return responseJson;\r\n  }\r\n\r\n  @override\r\n  Future<dynamic> postApi(String url, var data) async {\r\n    if (kDebugMode) {\r\n      print(url);\r\n      print(data);\r\n    }\r\n\r\n    dynamic responseJson;\r\n    try {\r\n      final response = await httpClient()\r\n          .post(url, data: data)\r\n          .timeout(const Duration(seconds: 10));\r\n      responseJson = returnResponse(response);\r\n    } on SocketException {\r\n      throw InternetException('');\r\n    } on RequestTimeOut {\r\n      throw RequestTimeOut('');\r\n    }\r\n    if (kDebugMode) {\r\n      print(responseJson);\r\n    }\r\n    return responseJson;\r\n  }\r\n\r\n  @override\r\n  Future<dynamic> putApi(String url, var data) async {\r\n    if (kDebugMode) {\r\n      print(url);\r\n      print(data);\r\n    }\r\n\r\n    dynamic responseJson;\r\n    try {\r\n      final response = await httpClient()\r\n          .put(url, data: data)\r\n          .timeout(const Duration(seconds: 20));\r\n      responseJson = returnResponse(response);\r\n    } on SocketException {\r\n      throw InternetException('');\r\n    } on RequestTimeOut {\r\n      throw RequestTimeOut('');\r\n    }\r\n    if (kDebugMode) {\r\n      print(responseJson);\r\n    }\r\n    return responseJson;\r\n  }\r\n\r\n  @override\r\n  Future<dynamic> deleteApi(String url) async {\r\n    if (kDebugMode) {\r\n      print(url);\r\n    }\r\n\r\n    dynamic responseJson;\r\n    try {\r\n      final response =\r\n          await httpClient().delete(url).timeout(const Duration(seconds: 20));\r\n      responseJson = returnResponse(response);\r\n    } on SocketException {\r\n      throw InternetException('');\r\n    } on RequestTimeOut {\r\n      throw RequestTimeOut('');\r\n    }\r\n    print(responseJson);\r\n    return responseJson;\r\n  }\r\n\r\n  dynamic returnResponse(dio.Response response) {\r\n    switch (response.statusCode) {\r\n      case 200:\r\n        dynamic responseJson = response;\r\n        return responseJson;\r\n      case 400:\r\n        dynamic responseJson = response;\r\n        return responseJson;\r\n      default:\r\n        throw FetchDataException(\r\n            'Error occurred while communicating with server ' +\r\n                response.statusCode.toString());\r\n    }\r\n  }\r\n}`,\r\n\r\n    api_store: `\r\nimport 'package:dio/dio.dart';\r\nimport '../../core/constants/static_variables.dart';\r\n\r\nDio httpClient() {\r\n  final options = BaseOptions(\r\n      baseUrl: StaticVariables.url,\r\n      headers: {\"Content-Type\": \"application/json\", ...getAuthHeader()});\r\n\r\n  return Dio(options);\r\n}\r\n\r\nDio httpClientNoToken() {\r\n  final options = BaseOptions(baseUrl: StaticVariables.url, headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  });\r\n\r\n  return Dio(options);\r\n}\r\n\r\nDio httpFormDataClient() {\r\n  final options = BaseOptions(\r\n      baseUrl: StaticVariables.url,\r\n      headers: {\"Content-Type\": \"multipart/form-data\", ...getAuthHeader()});\r\n  return Dio(options);\r\n}\r\n\r\nDio httpSignup() {\r\n  final options = BaseOptions(baseUrl: StaticVariables.url, headers: {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n  });\r\n  return Dio(options);\r\n}\r\n\r\nMap<String, String> getAuthHeader() {\r\n  return {\r\n    \"Authorization\": \"Bearer \\${StaticVariables.tokenid}\",\r\n  };\r\n}`,\r\n\r\n    base_api_services: `\r\nabstract class BaseApiServices {\r\n  Future<dynamic> getApi(String url);\r\n  Future<dynamic> postApi(String url, dynamic data);\r\n  Future<dynamic> putApi(String url, dynamic data);\r\n  Future<dynamic> deleteApi(String url);\r\n}`,\r\n\r\n    api_response: `\r\nimport 'status.dart';\r\n\r\nclass ApiResponse<T> {\r\n  Status? status;\r\n  T? data;\r\n  String? message;\r\n\r\n  ApiResponse(this.status, this.data, this.message);\r\n\r\n  ApiResponse.loading() : status = Status.LOADING;\r\n  ApiResponse.completed(this.data) : status = Status.COMPLETED;\r\n  ApiResponse.error(this.message) : status = Status.ERROR;\r\n\r\n  @override\r\n  String toString() {\r\n    return \"Status : $status  Message : $message  Data: $data\";\r\n  }\r\n}`,\r\n\r\n    status: `\r\nenum Status { LOADING, COMPLETED, ERROR }`,\r\n\r\n    static_variables: `\r\nclass StaticVariables {\r\n  static String url = 'YOUR_API_BASE_URL';\r\n  static String tokenid = '';\r\n}`,\r\n\r\n    main: `\r\nimport 'package:flutter/material.dart';\r\n\r\nvoid main() {\r\n  runApp(const MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      debugShowCheckedModeBanner: false,\r\n      title: 'MVC Demo',\r\n      theme: ThemeData(\r\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.blue),\r\n        useMaterial3: true,\r\n      ),\r\n      home: const HomePage(),\r\n    );\r\n  }\r\n}\r\n\r\nclass HomePage extends StatelessWidget {\r\n  const HomePage({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: const Text('MVC Demo'),\r\n        centerTitle: true,\r\n      ),\r\n      body: Container(\r\n        padding: const EdgeInsets.all(20),\r\n        width: double.infinity,\r\n        child: Column(\r\n          mainAxisAlignment: MainAxisAlignment.center,\r\n          children: [\r\n            Container(\r\n              padding: const EdgeInsets.all(20),\r\n              decoration: BoxDecoration(\r\n                color: Colors.blue.shade100,\r\n                borderRadius: BorderRadius.circular(10),\r\n                boxShadow: [\r\n                  BoxShadow(\r\n                    color: Colors.grey.withOpacity(0.5),\r\n                    spreadRadius: 2,\r\n                    blurRadius: 5,\r\n                    offset: const Offset(0, 3),\r\n                  ),\r\n                ],\r\n              ),\r\n              child: const Column(\r\n                children: [\r\n                  Icon(Icons.check_circle_outline, size: 50, color: Colors.blue),\r\n                  SizedBox(height: 20),\r\n                  Text(\r\n                    'MVC Structure Created Successfully!',\r\n                    style: TextStyle(\r\n                      fontSize: 20,\r\n                      fontWeight: FontWeight.bold,\r\n                    ),\r\n                    textAlign: TextAlign.center,\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}`,\r\n  };\r\n\r\n  static createMVCStructure(rootPath: string) {\r\n    const directories = [\r\n      \"lib/controllers\",\r\n      \"lib/models\",\r\n      \"lib/views\",\r\n      \"lib/core\",\r\n      \"lib/core/constants\",\r\n      \"lib/core/theme\",\r\n      \"lib/core/routes\",\r\n      \"lib/data\",\r\n      \"lib/data/network\",\r\n      \"lib/data/app_exceptions\",\r\n    ];\r\n\r\n    // Create directories\r\n    directories.forEach((dir) => {\r\n      const fullPath = path.join(rootPath, dir);\r\n      if (!fs.existsSync(fullPath)) {\r\n        fs.mkdirSync(fullPath, { recursive: true });\r\n      }\r\n    });\r\n\r\n    // Create files with templates\r\n    const files = [\r\n      {\r\n        path: \"lib/main.dart\",\r\n        content: this.fileTemplates.main,\r\n      },\r\n      {\r\n        path: \"lib/data/app_exceptions/app_exceptions.dart\",\r\n        content: this.fileTemplates.app_exceptions,\r\n      },\r\n      {\r\n        path: \"lib/data/network/network_api_services.dart\",\r\n        content: this.fileTemplates.network_api_services,\r\n      },\r\n      {\r\n        path: \"lib/data/network/api_store.dart\",\r\n        content: this.fileTemplates.api_store,\r\n      },\r\n      {\r\n        path: \"lib/data/network/base_api_services.dart\",\r\n        content: this.fileTemplates.base_api_services,\r\n      },\r\n      {\r\n        path: \"lib/data/network/api_response.dart\",\r\n        content: this.fileTemplates.api_response,\r\n      },\r\n      {\r\n        path: \"lib/data/network/status.dart\",\r\n        content: this.fileTemplates.status,\r\n      },\r\n      {\r\n        path: \"lib/core/constants/static_variables.dart\",\r\n        content: this.fileTemplates.static_variables,\r\n      },\r\n    ];\r\n\r\n    files.forEach((file) => {\r\n      const filePath = path.join(rootPath, file.path);\r\n      if (!fs.existsSync(filePath)) {\r\n        fs.mkdirSync(path.dirname(filePath), { recursive: true });\r\n        fs.writeFileSync(filePath, file.content);\r\n      }\r\n    });\r\n\r\n    // Update pubspec.yaml with required packages\r\n    MVCYamalUtility.updateMVCPubspecYaml(rootPath);\r\n\r\n    vscode.window.showInformationMessage(\r\n      \"MVC Architecture created successfully!\"\r\n    );\r\n  }\r\n}\r\n","import * as vscode from \"vscode\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\n\r\nexport class MVCYamalUtility {\r\n  static requiredPackages: { [key: string]: string } = {\r\n    dio: \"^5.4.0\",\r\n  };\r\n\r\n  public static updateMVCPubspecYaml(rootPath: string) {\r\n    const pubspecPath = path.join(rootPath, \"pubspec.yaml\");\r\n\r\n    if (fs.existsSync(pubspecPath)) {\r\n      let pubspecContent = fs.readFileSync(pubspecPath, \"utf-8\");\r\n\r\n      // Find the dependencies section\r\n      const dependenciesMatch = pubspecContent.match(/dependencies:\\s*\\n/);\r\n      if (dependenciesMatch) {\r\n        const insertPosition =\r\n          dependenciesMatch.index! + dependenciesMatch[0].length;\r\n\r\n        // Add packages after the flutter: sdk entry\r\n        for (const [pkg, version] of Object.entries(\r\n          MVCYamalUtility.requiredPackages\r\n        )) {\r\n          if (!pubspecContent.includes(pkg + \":\")) {\r\n            const flutterSdkMatch = pubspecContent.match(/sdk:\\s*flutter\\s*\\n/);\r\n            if (flutterSdkMatch) {\r\n              const position =\r\n                flutterSdkMatch.index! + flutterSdkMatch[0].length;\r\n              pubspecContent =\r\n                pubspecContent.slice(0, position) +\r\n                `  ${pkg}: ${version}\\n` +\r\n                pubspecContent.slice(position);\r\n            }\r\n          }\r\n        }\r\n\r\n        fs.writeFileSync(pubspecPath, pubspecContent);\r\n        vscode.window.showInformationMessage(\r\n          \"pubspec.yaml updated with MVC required packages.\"\r\n        );\r\n      } else {\r\n        vscode.window.showErrorMessage(\r\n          \"Could not find dependencies section in pubspec.yaml\"\r\n        );\r\n      }\r\n    } else {\r\n      vscode.window.showErrorMessage(\"pubspec.yaml not found.\");\r\n    }\r\n  }\r\n}\r\n","export class app_url {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    app_url: ` \r\nclass AppUrl {\r\n\r\n\r\n  // static var baseUrl = 'https://reqres.in' ;\r\n  // static var moviesBaseUrl = 'https://dea91516-1da3-444b-ad94-c6d0c4dfab81.mock.pstmn.io/' ;\r\n\r\n  // static var loginEndPint =  '$baseUrl/api/login' ;\r\n \r\n}\r\n`,\r\n  };\r\n}\r\n","export class color {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    color: `\r\n     import 'package:flutter/material.dart';\r\n\r\nclass AppColors {\r\n\r\n  static const Color blackColor = Color(0x0ff00000);\r\n  static const Color whiteColor = Color(0xFFFFFFFF);\r\n  static const Color buttonColor = Colors.green;\r\n\r\n}\r\n`,\r\n  };\r\n}\r\n","export class internet_exception_widget {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    internet_exception_widget: ` \r\nimport 'package:flutter/material.dart';\r\n\r\n\r\nclass InterNetExceptionWidget extends StatefulWidget {\r\n  final VoidCallback onPress;\r\n  const InterNetExceptionWidget({Key? key, required this.onPress})\r\n      : super(key: key);\r\n\r\n  @override\r\n  State<InterNetExceptionWidget> createState() =>\r\n      _InterNetExceptionWidgetState();\r\n}\r\n\r\nclass _InterNetExceptionWidgetState extends State<InterNetExceptionWidget> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding: const EdgeInsets.symmetric(horizontal: 20),\r\n      child: Column(\r\n        children: [\r\n          SizedBox(height: MediaQuery.of(context).size.height * .15),\r\n          const Icon(\r\n            Icons.cloud_off,\r\n            color: Colors.red,\r\n            size: 50,\r\n          ),\r\n          Padding(\r\n            padding: const EdgeInsets.only(top: 30),\r\n            child: Center(\r\n              child: Text(\r\n                  'We’re unable to show results.Please check your data connection.',\r\n                  textAlign: TextAlign.center,\r\n                   maxLines: 3,\r\n                  style: Theme.of(context)\r\n                      .textTheme\r\n                      .displayMedium!\r\n                      .copyWith(fontSize: 20)),\r\n            ),\r\n          ),\r\n          SizedBox(height: MediaQuery.of(context).size.height * .15),\r\n          ElevatedButton(\r\n            onPressed: widget.onPress,\r\n            child: Center(\r\n              child: Text(\r\n                'RETRY',\r\n                style: Theme.of(context)\r\n                    .textTheme\r\n                    .bodySmall,\r\n              ),\r\n            ),\r\n          )\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","export class loading_widget {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    loading_widget: ` \r\n    import 'dart:io' show Platform;\r\n\r\nimport 'package:flutter/cupertino.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\n//custom loading widget, we will used this widget show user some action depending on it's need\r\n// this widget is generic, we can change it and this change will appear across the app\r\nclass LoadingWidget extends StatelessWidget {\r\n  final double size;\r\n  const LoadingWidget({Key? key, this.size = 36.0}) : super(key: key);\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Center(\r\n      child: SizedBox(\r\n        width: size,\r\n        height: size,\r\n        child: Platform.isIOS\r\n            ? const CupertinoActivityIndicator(\r\n          color: Colors.blue,\r\n        )\r\n            : const CircularProgressIndicator(\r\n          strokeWidth: 2.0,\r\n          color: Colors.blue,\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","export class network_image_widget {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    network_image_widget: ` \r\n\r\nimport 'package:cached_network_image/cached_network_image.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'loading_widget.dart';\r\n\r\n//custom network image widget, we will used this widget show images, also handled exceptions\r\n// this widget is generic, we can change it and this change will appear across the app\r\nclass NetworkImageWidget extends StatelessWidget {\r\n  final String imageUrl;\r\n  final double width, height, borderRadius , iconSize;\r\n  final BoxFit boxFit ;\r\n  const NetworkImageWidget(\r\n      {Key? key,\r\n        required this.imageUrl,\r\n        this.width = 40,\r\n        this.height = 40,\r\n        this.borderRadius = 18 ,\r\n      this.iconSize = 20 ,\r\n        this.boxFit = BoxFit.cover\r\n      })\r\n      : super(key: key);\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return  ClipRRect(\r\n      borderRadius: BorderRadius.circular(borderRadius),\r\n      child: imageUrl == '' ?\r\n      Container(\r\n          width: width,\r\n          height: height,\r\n          decoration: BoxDecoration(\r\n            color: Colors.grey.shade900,\r\n            borderRadius: BorderRadius.circular(borderRadius),\r\n          ),\r\n          child:  Icon(Icons.person_outline , size: iconSize,)) :\r\n      CachedNetworkImage(\r\n        imageUrl: imageUrl,\r\n        width: width,\r\n        height: height,\r\n        imageBuilder: (context, imageProvider) => Container(\r\n          width: width,\r\n          height: height,\r\n          decoration: BoxDecoration(\r\n            borderRadius: BorderRadius.circular(borderRadius),\r\n            image: DecorationImage(\r\n              image: imageProvider,\r\n              fit: boxFit,\r\n            ),\r\n          ),\r\n        ),\r\n        placeholder: (context, url) => Container(\r\n          width: width,\r\n          height: height,\r\n          decoration: BoxDecoration(\r\n            color: Colors.grey.shade900,\r\n            borderRadius: BorderRadius.circular(borderRadius),\r\n          ),\r\n          child: const Padding(\r\n            padding: EdgeInsets.all(12.0),\r\n            child: LoadingWidget(),\r\n          ),\r\n        ),\r\n        errorWidget: (context, url, error) => Container(\r\n            width: width,\r\n            height: height,\r\n            decoration: BoxDecoration(\r\n              color: Colors.grey.shade900,\r\n              borderRadius: BorderRadius.circular(13),\r\n            ),\r\n            child:  Icon(Icons.error_outline , size: iconSize,)),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","export class round_button {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    round_button: ` \r\nimport 'package:flutter/material.dart';\r\nimport '../color/color.dart';\r\n\r\n\r\n\r\n//custom round button component, we will used this widget show to show button\r\n// this widget is generic, we can change it and this change will appear across the app\r\nclass RoundButton extends StatelessWidget {\r\n\r\n  final String title ;\r\n  final bool loading ;\r\n  final VoidCallback onPress ;\r\n  const RoundButton({Key? key ,\r\n    required this.title,\r\n    this.loading = false ,\r\n     required this.onPress ,\r\n\r\n  }) : super(key: key);\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return InkWell(\r\n      onTap: onPress,\r\n      child: Container(\r\n        height: 40,\r\n        width: 200,\r\n        decoration: BoxDecoration(\r\n          color: AppColors.buttonColor,\r\n          borderRadius: BorderRadius.circular(10)\r\n        ),\r\n        child: Center(\r\n            child:loading ? const CircularProgressIndicator(color: Colors.white,) :\r\n            Text(title ,\r\n              style: const TextStyle(color: AppColors.whiteColor),\r\n            )),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","export class exceptions {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    exceptions: ` \r\n    import 'package:flutter/material.dart';\r\n\r\nextension MediaQueryValues on BuildContext {\r\n  double get mediaQueryHeight => MediaQuery.sizeOf(this).height;\r\n  double get mediaQueryWidth => MediaQuery.sizeOf(this).width ;\r\n}\r\n\r\n\r\nextension EmptySpace on num {\r\n  SizedBox get height => SizedBox(height:toDouble());\r\n  SizedBox get width => SizedBox(width:toDouble());\r\n}\r\n`,\r\n  };\r\n}\r\n","import { routes } from \"../../../NextWayArchitecture/src/router/routes\";\r\n\r\nexport class route {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    routes: ` \r\nimport 'package:flutter/material.dart';\r\nimport '../../configs/routes/routes_name.dart';\r\n\r\nclass Routes {\r\n  static Route<dynamic> generateRoute(RouteSettings settings) {\r\n    switch (settings.name) {\r\n      case RoutesName.splash:\r\n        return MaterialPageRoute(\r\n            builder: (BuildContext context) => const Splash());\r\n\r\n      default:\r\n        return MaterialPageRoute(builder: (_) {\r\n          return const Scaffold(\r\n            body: Center(\r\n              child: Text('No route defined'),\r\n            ),\r\n          );\r\n        });\r\n    }\r\n  }\r\n}\r\n\r\nclass Splash extends StatelessWidget {\r\n  const Splash({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","export class routes_name {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    routes_name: ` \r\nclass RoutesName {\r\n\r\n  static const String splash = 'splash' ;\r\n\r\n}\r\n`,\r\n  };\r\n}\r\n","export class utils {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    utils: ` \r\n\r\nimport 'package:another_flushbar/flushbar.dart';\r\nimport 'package:another_flushbar/flushbar_route.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:fluttertoast/fluttertoast.dart';\r\n\r\nclass Utils {\r\n\r\n\r\n  // we will use this function to shift focus from one text field to another text field\r\n  // we are using to avoid duplications of code\r\n  static void fieldFocusChange(BuildContext context , FocusNode current , FocusNode nextFocus){\r\n    current.unfocus();\r\n    FocusScope.of(context).requestFocus(nextFocus);\r\n  }\r\n\r\n  // generic toast message imported from toast package\r\n  // we will utilise this for showing errors or success messages\r\n  static toastMessage(String message){\r\n    Fluttertoast.showToast(\r\n        msg: message,\r\n    backgroundColor: Colors.black,\r\n      textColor: Colors.white,\r\n    );\r\n  }\r\n\r\n  //imported this from flush bar package\r\n  // we will utilise this for showing errors or success messages\r\n  static void flushBarErrorMessage(String message, BuildContext context){\r\n    showFlushbar(context: context,\r\n        flushbar: Flushbar(\r\n          forwardAnimationCurve:Curves.decelerate,\r\n          margin: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\r\n          padding: const EdgeInsets.all(15),\r\n          message: message,\r\n          duration: const Duration(seconds: 3),\r\n          borderRadius: BorderRadius.circular(8),\r\n          flushbarPosition: FlushbarPosition.TOP,\r\n          backgroundColor: Colors.red,\r\n          reverseAnimationCurve: Curves.easeInOut,\r\n          positionOffset: 20,\r\n          icon: const Icon(Icons.error , size: 28 , color: Colors.white,),\r\n        )..show(context),\r\n\r\n    );\r\n\r\n  }\r\n\r\n\r\n  // we will utilise this for showing errors or success messages\r\n  static snackBar(String message, BuildContext context){\r\n    return ScaffoldMessenger.of(context).showSnackBar(\r\n      SnackBar(\r\n        backgroundColor: Colors.red,\r\n        content: Text(message ))\r\n    );\r\n  }\r\n\r\n}\r\n`,\r\n  };\r\n}\r\n","export class app_exceptions {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    app_exceptions: `\r\n class AppException implements Exception {\r\n\r\n   // ignore: prefer_typing_uninitialized_variables\r\n   final _message;\r\n   // ignore: prefer_typing_uninitialized_variables\r\n   final _prefix;\r\n\r\n   AppException([this._message , this._prefix]);\r\n\r\n  @override\r\n  String toString(){\r\n    return '$_message$_prefix' ;\r\n  }\r\n\r\n}\r\n\r\n\r\nclass FetchDataException extends AppException {\r\n\r\n  FetchDataException([String? message]) : super(message,'Error During Communication');\r\n}\r\n\r\n\r\nclass BadRequestException extends AppException {\r\n\r\n  BadRequestException([String? message]) : super(message, 'Invalid request');\r\n}\r\n\r\n\r\nclass UnauthorisedException extends AppException {\r\n\r\n  UnauthorisedException([String? message]) : super(message,'Unauthorised request');\r\n}\r\n\r\n\r\nclass InvalidInputException extends AppException {\r\n\r\n  InvalidInputException([String? message]) : super(message, 'Invalid Input');\r\n}\r\n\r\n\r\nclass NoInternetException extends AppException {\r\n\r\n  NoInternetException([String? message]) : super(message,'No Internet Connection');\r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","export class base_api_services {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    base_api_services: ` \r\nabstract class BaseApiServices {\r\n\r\n  Future<dynamic> getGetApiResponse(String url);\r\n\r\n  Future<dynamic> getPostApiResponse(String url , dynamic data);\r\n\r\n}\r\n`,\r\n  };\r\n}\r\n","export class network_api_services {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    network_api_services: ` \r\nimport 'dart:async';\r\nimport 'dart:convert';\r\nimport 'dart:io';\r\nimport 'package:flutter/foundation.dart';\r\nimport 'package:http/http.dart';\r\nimport '../../data/app_exceptions.dart';\r\nimport '../../data/network/base_api_services.dart';\r\nimport 'package:http/http.dart' as http;\r\n\r\nclass NetworkApiService implements BaseApiServices {\r\n  @override\r\n  Future getGetApiResponse(String url) async {\r\n    if (kDebugMode) {\r\n      print(url);\r\n    }\r\n    dynamic responseJson;\r\n    try {\r\n      final response =\r\n          await http.get(Uri.parse(url)).timeout(const Duration(seconds: 20));\r\n      responseJson = returnResponse(response);\r\n    } on SocketException {\r\n      throw NoInternetException('');\r\n    } on TimeoutException {\r\n      throw FetchDataException('Network Request time out');\r\n    }\r\n\r\n    if (kDebugMode) {\r\n      print(responseJson);\r\n    }\r\n    return responseJson;\r\n  }\r\n\r\n  @override\r\n  Future getPostApiResponse(String url, dynamic data) async {\r\n    if (kDebugMode) {\r\n      print(url);\r\n      print(data);\r\n    }\r\n\r\n    dynamic responseJson;\r\n    try {\r\n      Response response = await post(Uri.parse(url), body: data)\r\n          .timeout(const Duration(seconds: 10));\r\n\r\n      responseJson = returnResponse(response);\r\n    } on SocketException {\r\n      throw NoInternetException('No Internet Connection');\r\n    } on TimeoutException {\r\n      throw FetchDataException('Network Request time out');\r\n    }\r\n\r\n    if (kDebugMode) {\r\n      print(responseJson);\r\n    }\r\n    return responseJson;\r\n  }\r\n\r\n  dynamic returnResponse(http.Response response) {\r\n    if (kDebugMode) {\r\n      print(response.statusCode);\r\n    }\r\n\r\n    switch (response.statusCode) {\r\n      case 200:\r\n        dynamic responseJson = jsonDecode(response.body);\r\n        return responseJson;\r\n      case 400:\r\n        throw BadRequestException(response.body.toString());\r\n      case 500:\r\n      case 404:\r\n        throw UnauthorisedException(response.body.toString());\r\n      default:\r\n        throw FetchDataException(\r\n            'Error occured while communicating with server');\r\n    }\r\n  }\r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","export class api_response {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    api_response: ` \r\nimport '../../data/response/status.dart';\r\nclass ApiResponse<T> {\r\n\r\n  Status? status ;\r\n  T? data ;\r\n  String? message ;\r\n\r\n  ApiResponse(this.status , this.data, this.message);\r\n\r\n  ApiResponse.notStarted() : status = Status.notStarted ;\r\n\r\n  ApiResponse.loading() : status = Status.loading ;\r\n\r\n  ApiResponse.completed(this.data) : status = Status.completed ;\r\n\r\n  ApiResponse.error(this.message) : status = Status.error ;\r\n\r\n\r\n  @override\r\n  String toString(){\r\n    return \"Status : $status  Message : $message  Data: $data\" ;\r\n  }\r\n\r\n\r\n}\r\n`,\r\n  };\r\n}\r\n","export class status {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    status: ` \r\nenum Status { notStarted,loading, completed, error}\r\n`,\r\n  };\r\n}\r\n","export class generated_plugin_registrant {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    generated_plugin_registrant: ` //\r\n// Generated file. Do not edit.\r\n//\r\n\r\n// ignore_for_file: directives_ordering\r\n// ignore_for_file: lines_longer_than_80_chars\r\n// ignore_for_file: depend_on_referenced_packages\r\n\r\nimport 'package:fluttertoast/fluttertoast_web.dart';\r\nimport 'package:shared_preferences_web/shared_preferences_web.dart';\r\n\r\nimport 'package:flutter_web_plugins/flutter_web_plugins.dart';\r\n\r\n// ignore: public_member_api_docs\r\nvoid registerPlugins(Registrar registrar) {\r\n  FluttertoastWebPlugin.registerWith(registrar);\r\n  SharedPreferencesPlugin.registerWith(registrar);\r\n  registrar.registerMessageHandler();\r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","import { app_url } from \"./configs/app_url\";\r\nimport { color } from \"./configs/color/color\";\r\nimport { internet_exception_widget } from \"./configs/components/internet_exception_widget\";\r\nimport { loading_widget } from \"./configs/components/loading_widget\";\r\nimport { network_image_widget } from \"./configs/components/network_image_widget\";\r\nimport { round_button } from \"./configs/components/round_button\";\r\nimport { exceptions } from \"./configs/extensions\";\r\nimport { route } from \"./configs/routes/routes\";\r\nimport { routes_name } from \"./configs/routes/routes_name\";\r\nimport { utils } from \"./configs/utils\";\r\nimport { app_exceptions } from \"./data/app_exceptions\";\r\nimport { base_api_services } from \"./data/network/base_api_services\";\r\nimport { network_api_services } from \"./data/network/network_api_services\";\r\nimport { api_response } from \"./data/response/api_response\";\r\nimport { status } from \"./data/response/status\";\r\nimport { generated_plugin_registrant } from \"./generated_plugin_registrant\";\r\nimport { Main } from \"./main\";\r\n\r\nexport const ImportsManagerMvvm = {\r\n  Main,\r\n  generated_plugin_registrant,\r\n  app_url,\r\n  exceptions,\r\n  utils,\r\n  color,\r\n  internet_exception_widget,\r\n  loading_widget,\r\n  app_exceptions,\r\n  network_image_widget,\r\n  round_button,\r\n  routes_name,\r\n  route,\r\n  base_api_services,\r\n  network_api_services,\r\n  api_response,\r\n  status,\r\n};\r\n","export class Main {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    main: ` \r\nimport 'package:flutter/material.dart';\r\nimport 'package:get_it/get_it.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nimport 'configs/routes/routes.dart';\r\nimport 'configs/routes/routes_name.dart';\r\n\r\n// creating an instance of GetIt\r\n// GetIt is a package used for service locator or to manage dependency injection\r\nGetIt getIt = GetIt.instance;\r\n\r\nvoid main() {\r\n  WidgetsFlutterBinding.ensureInitialized();\r\n  // getIt.registerLazySingleton<HomeRepository>(() => HomeHttpApiRepository());\r\n  runApp(const MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MultiProvider(\r\n      providers: const [\r\n        // initializing all the view model crated with Provider to used them across the app\r\n\r\n        // ChangeNotifierProvider(\r\n        //     create: (_) => HomeViewViewModel(homeRepository: getIt())),\r\n      ],\r\n      child: MaterialApp(\r\n        title: 'Flutter Demo',\r\n        theme: ThemeData(\r\n          primarySwatch: Colors.blue,\r\n        ),\r\n        // this is the initial route indicating from where our app will start\r\n        initialRoute: RoutesName.splash,\r\n        onGenerateRoute: Routes.generateRoute,\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n\r\n`,\r\n  };\r\n}\r\n","import * as vscode from \"vscode\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as _ from \"lodash\";\r\n\r\nexport class MvvmYamalUtility {\r\n  static requiredPackages: { [key: string]: string } = {\r\n    fluttertoast: \"^8.2.4\",\r\n    http: \"^1.2.0\",\r\n    another_flushbar: \"^1.12.30\",\r\n    cached_network_image: \"^3.3.1\",\r\n    get_it: \"^7.6.7\",\r\n    provider: \"^6.1.1\",\r\n    shared_preferences: \"^2.2.2\",\r\n  };\r\n\r\n  public static updateMvvmPubspecYaml(rootPath: string) {\r\n    const pubspecPath = path.join(rootPath, \"pubspec.yaml\");\r\n\r\n    if (fs.existsSync(pubspecPath)) {\r\n      let pubspecContent = fs.readFileSync(pubspecPath, \"utf-8\");\r\n\r\n      for (const [pkg, version] of Object.entries(\r\n        MvvmYamalUtility.requiredPackages\r\n      )) {\r\n        if (!pubspecContent.includes(pkg)) {\r\n          pubspecContent += `\\n  ${pkg}: ${version}`;\r\n        }\r\n      }\r\n\r\n      fs.writeFileSync(pubspecPath, pubspecContent);\r\n      vscode.window.showInformationMessage(\r\n        \"pubspec.yaml updated with required packages.\"\r\n      );\r\n    } else {\r\n      vscode.window.showErrorMessage(\"pubspec.yaml not found.\");\r\n    }\r\n  }\r\n}\r\n","export class Featurecontroller {\r\n  public static fileTemplates: {\r\n    [key: string]: (featureName: string) => string;\r\n  } = {\r\n    controller: (featureName: string) => `\r\n// import 'dart:developer';\r\n\r\n// import '../../../common/constants/global_variables.dart';\r\n// import '../../../common/constants/static_data.dart';\r\n// import '../../../common/utils/custom_snakbar.dart';\r\n// import '../../../common/utils/shared_pref_helper.dart';\r\nimport '../../../features/${featureName.toLowerCase()}/controllers/${featureName.toLowerCase()}_state.dart';\r\nimport '../../../features/${featureName.toLowerCase()}/repository/${featureName.toLowerCase()}_repository.dart';\r\n// import '../../../router/routes.dart';\r\n// import 'package:flutter/material.dart';\r\nimport 'package:flutter_riverpod/flutter_riverpod.dart';\r\n// import 'package:go_router/go_router.dart';\r\n// import 'package:loader_overlay/loader_overlay.dart';\r\n\r\n\r\n// ########################  RiverPod-Providers ############################  //\r\n\r\n//final userProvider = StateProvider<UserModel?>((ref) => null);\r\n\r\n// final ${featureName.toLowerCase()}ControllerProvider = StateNotifierProvider<${featureName}Controller, ${featureName}State>(\r\n//   (ref) => ${featureName}Controller(\r\n//       ${featureName.toLowerCase()}Repository: ref.read(${featureName.toLowerCase()}RepositoryProvider), ref: ref),\r\n// );\r\n// ############################## -END- ##################################### //\r\n        class ${featureName}Controller extends StateNotifier<${featureName}State>{\r\n          final ${featureName}Repository _${featureName.toLowerCase()}Repository;\r\n  final Ref _ref;\r\n  ${featureName}Controller({required ${featureName}Repository ${featureName.toLowerCase()}Repository, required Ref ref})\r\n      : _${featureName.toLowerCase()}Repository = ${featureName.toLowerCase()}Repository,\r\n        _ref = ref,\r\n        super(const ${featureName}State(\r\n            isLoading: false, isObserver: true, isAuthenticated: false));\r\n              // ##########################   Objects  ################################## //\r\n\r\n  // ########################   All-Methods-Calls  ########################## //\r\n\r\n  //   Future<UserModel?> getUserData(BuildContext context) async {\r\n  //   try {\r\n  //     final user = await _${featureName.toLowerCase()}Repository.getData();\r\n  //     return user.fold((failure) {\r\n  //       CustomSnackbar.showSnackbar(\r\n  //         context: context,\r\n  //         message: failure.message,\r\n  //         type: SnackbarType.error,\r\n  //       );\r\n  //       return null;\r\n  //     }, (userModel) {\r\n  //       _ref.read(userProvider.notifier).update((state) => userModel);\r\n\r\n  //       return userModel;\r\n  //     });\r\n  //   } catch (error) {\r\n  //     CustomSnackbar.showSnackbar(\r\n  //       context: context,\r\n  //       message: error.toString(),\r\n  //       type: SnackbarType.error,\r\n  //     );\r\n  //     return null;\r\n  //   }\r\n  // }\r\n\r\n        }\r\n      `,\r\n  };\r\n}\r\n","export class FeatureState {\r\n  public static fileTemplates: {\r\n    [key: string]: (featureName: string) => string;\r\n  } = {\r\n    state: (featureName: string) => `\r\n        class ${featureName}State {\r\n            final bool isLoading;\r\n  final bool isObserver;\r\n  final bool isAuthenticated;\r\n\r\n  const ${featureName}State({\r\n    required this.isLoading,\r\n    required this.isObserver,\r\n    required this.isAuthenticated,\r\n  });\r\n\r\n  ${featureName}State copyWith({\r\n    bool? isLoading,\r\n    bool? isObserver,\r\n    bool? isAuthenticated,\r\n  }) {\r\n    return ${featureName}State(\r\n      isLoading: isLoading ?? this.isLoading,\r\n      isObserver: isObserver ?? this.isObserver,\r\n      isAuthenticated: isAuthenticated ?? this.isAuthenticated,\r\n    );\r\n  }\r\n        }\r\n      `,\r\n  };\r\n}\r\n","export class FeatureRepository {\r\n  public static fileTemplates: {\r\n    [key: string]: (featureName: string) => string;\r\n  } = {\r\n    repository: (featureName: string) => `\r\n\r\n// import 'dart:convert';\r\n// import 'dart:developer';\r\n// import 'dart:io';\r\nimport '../../../core/api_helper.dart';\r\n// import '../../../core/failure.dart';\r\n// import '../../../core/type_def.dart';\r\n// import '../../../res/api_endpoints.dart';\r\nimport 'package:flutter_riverpod/flutter_riverpod.dart';\r\n// import 'package:fpdart/fpdart.dart';\r\n// import '../../../common/constants/static_data.dart';\r\n\r\n//     final ${featureName.toLowerCase()}RepositoryProvider = Provider(\r\n//   (ref) => ${featureName}Repository(\r\n//       apiHelper: ref.read(apiHelperProvider),\r\n//       ${featureName.toLowerCase()}: ref.read(${featureName.toLowerCase()}Provider),\r\n//       googleSignIn: ref.read(googleSignInProvider),\r\n//       ref: ref),\r\n// );\r\n        class ${featureName}Repository {\r\n           ${featureName}Repository({\r\n   \r\n    required ApiHelper apiHelper,\r\n    required Ref ref,\r\n  }) ;\r\n         // Stream<User?> get authStateChange => _auth.authStateChanges();\r\n\r\n         // ########################   All-Methods-Calls  ########################## //\r\n\r\n         // *************************   Sign In Google  **************************** //\r\n        //  FutureEither signInWithGoogle(bool isFromLogin) async {\r\n        //    try {\r\n        //      UserCredential userCredential;\r\n        //      if (kIsWeb) {\r\n        //        log('kIsWeb run ...');\r\n        //        GoogleAuthProvider googleProvider = GoogleAuthProvider();\r\n        //        googleProvider\r\n        //            .addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n        //        userCredential = await _auth.signInWithPopup(googleProvider);\r\n        //      } else {\r\n        //        log('else kIsWeb run ...');\r\n       \r\n        //        final GoogleSignInAccount? googleUser = await _googleSignIn.signIn();\r\n       \r\n        //        final googleAuth = await googleUser?.authentication;\r\n       \r\n        //        final credential = GoogleAuthProvider.credential(\r\n        //          accessToken: googleAuth?.accessToken,\r\n        //          idToken: googleAuth?.idToken,\r\n        //        );\r\n       \r\n        //        if (isFromLogin) {\r\n        //          userCredential = await _auth.signInWithCredential(credential);\r\n        //        } else {\r\n        //          userCredential =\r\n        //              await _auth.currentUser!.linkWithCredential(credential);\r\n        //        }\r\n        //      }\r\n       \r\n        //      return right(true);\r\n        //    } on FirebaseException catch (e) {\r\n        //      throw e.message!;\r\n        //    } catch (e) {\r\n        //      return left(Failure(message: e.toString()));\r\n        //    }\r\n        //  }\r\n  //        // ******************   Sign Up With Email and Password  ********************* //\r\n\r\n  // FutureEither<UserModel> signUpWithEmailPassword({\r\n  //   required String name,\r\n  //   required String username,\r\n  //   required String email,\r\n  //   required String password,\r\n  //   required String phone,\r\n  // }) async {\r\n  //   try {\r\n  //     final result = await _apiHelper.postRequest(\r\n  //         endpoint: ApiEndpoints.signUp,\r\n  //         requireAuth: false,\r\n  //         data: {\r\n  //           'name': name,\r\n  //           \r\n  //         });\r\n\r\n  //     return result.fold(\r\n  //       (failure) => Left(failure),\r\n  //       (response) {\r\n  //         final responseBody = json.decode(response.body);\r\n\r\n  //         if (response.statusCode == 200 && responseBody.containsKey('user')) {\r\n  //           final userData = responseBody['user'];\r\n  //           final userModel = UserModel.fromJson(userData);\r\n  //           return Right(userModel); // Success response\r\n  //         } else {\r\n  //           String errorMessage = responseBody['error'] ?? 'Unexpected error';\r\n  //           return Left(Failure(message: errorMessage));\r\n  //         }\r\n  //       },\r\n  //     );\r\n  //   } catch (e) {\r\n  //     log('Sign-up error: $e');\r\n  //     return Left(\r\n  //         Failure(message: 'Network error occurred, please try again later.'));\r\n  //   }\r\n  // }\r\n  //   // ***************************   Log Out  *********************************** //\r\n  // void logOut() async {\r\n  //   // Handle logout logic, maybe clearing tokens or notifying the server\r\n  // }\r\n           }\r\n      `,\r\n    // Add other template types if needed\r\n  };\r\n}\r\n","import * as vscode from \"vscode\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as _ from \"lodash\";\r\nimport { firebase_options } from \"../../dart_snippets/NextWayArchitecture/firebase_options\";\r\nimport { app_constant } from \"../../dart_snippets/NextWayArchitecture/src/common/constants/app_constant\";\r\nimport { global_variables } from \"../../dart_snippets/NextWayArchitecture/src/common/constants/global_variables\";\r\nimport { image_paths } from \"../../dart_snippets/NextWayArchitecture/src/common/constants/image_paths\";\r\nimport { static_data } from \"../../dart_snippets/NextWayArchitecture/src/common/constants/static_data\";\r\nimport { custom_snackbar } from \"../../dart_snippets/NextWayArchitecture/src/common/utils/custom_snackbar\";\r\nimport { custom_snakbar } from \"../../dart_snippets/NextWayArchitecture/src/common/utils/custom_snakbar\";\r\nimport { shared_pref_helper } from \"../../dart_snippets/NextWayArchitecture/src/common/utils/shared_pref_helper\";\r\nimport { validation } from \"../../dart_snippets/NextWayArchitecture/src/common/utils/validation\";\r\nimport { custom_button } from \"../../dart_snippets/NextWayArchitecture/src/common/widgets/custom_button\";\r\nimport { custom_textfield } from \"../../dart_snippets/NextWayArchitecture/src/common/widgets/custom_textfield\";\r\nimport { error_route } from \"../../dart_snippets/NextWayArchitecture/src/router/error_route\";\r\nimport { route_transition } from \"../../dart_snippets/NextWayArchitecture/src/router/route_transition\";\r\nimport { routes } from \"../../dart_snippets/NextWayArchitecture/src/router/routes\";\r\nimport { tab_bar_theme } from \"../../dart_snippets/NextWayArchitecture/src/theme/widget_theme/tab_bar_theme\";\r\nimport { text_theme } from \"../../dart_snippets/NextWayArchitecture/src/theme/widget_theme/text_theme\";\r\nimport { app_theme } from \"../../dart_snippets/NextWayArchitecture/src/theme/app_theme\";\r\nimport { color_scheme } from \"../../dart_snippets/NextWayArchitecture/src/theme/color_scheme\";\r\nimport { YamalUtility } from \"../../dart_snippets/NextWayArchitecture/utils/yamal_utils\";\r\nimport { FeatureUtils } from \"../../dart_snippets/NextWayArchitecture/utils/feature_utils\";\r\nimport { Main } from \"../../dart_snippets/NextWayArchitecture/main\";\r\n\r\nimport { Featurecontroller } from \"./Features/controllers/feature_controller\";\r\nimport { FeatureState } from \"./Features/controllers/feature_state\";\r\nimport { FeatureRepository } from \"./Features/repository/feature_repository\";\r\n\r\nexport const ImportsManager = {\r\n  firebase_options,\r\n  Main,\r\n  app_constant,\r\n  global_variables,\r\n  image_paths,\r\n  static_data,\r\n  custom_snackbar,\r\n  custom_snakbar,\r\n  shared_pref_helper,\r\n  validation,\r\n  custom_button,\r\n  custom_textfield,\r\n  error_route,\r\n  route_transition,\r\n  routes,\r\n  tab_bar_theme,\r\n  text_theme,\r\n  app_theme,\r\n  color_scheme,\r\n  Featurecontroller,\r\n  FeatureState,\r\n  FeatureRepository,\r\n  YamalUtility,\r\n  FeatureUtils,\r\n};\r\n","\r\n\r\nexport class firebase_options {\r\n  public static  fileTemplates: { [key: string]: string } = {\r\n    firebase_options: `\r\nimport 'package:firebase_core/firebase_core.dart' show FirebaseOptions;\r\nimport 'package:flutter/foundation.dart'\r\n    show defaultTargetPlatform, kIsWeb, TargetPlatform;\r\n\r\nclass DefaultFirebaseOptions {\r\n  static FirebaseOptions get currentPlatform {\r\n    if (kIsWeb) {\r\n      return web;\r\n    }\r\n    switch (defaultTargetPlatform) {\r\n      case TargetPlatform.android:\r\n        return android;\r\n      case TargetPlatform.iOS:\r\n        return ios;\r\n      case TargetPlatform.macOS:\r\n        throw UnsupportedError(\r\n          'DefaultFirebaseOptions have not been configured for macos - '\r\n          'you can reconfigure this by running the FlutterFire CLI again.',\r\n        );\r\n      case TargetPlatform.windows:\r\n        throw UnsupportedError(\r\n          'DefaultFirebaseOptions have not been configured for windows - '\r\n          'you can reconfigure this by running the FlutterFire CLI again.',\r\n        );\r\n      case TargetPlatform.linux:\r\n        throw UnsupportedError(\r\n          'DefaultFirebaseOptions have not been configured for linux - '\r\n          'you can reconfigure this by running the FlutterFire CLI again.',\r\n        );\r\n      default:\r\n        throw UnsupportedError(\r\n          'DefaultFirebaseOptions are not supported for this platform.',\r\n        );\r\n    }\r\n  }\r\n\r\n  static const FirebaseOptions web = FirebaseOptions(\r\n    apiKey: '',\r\n    appId: '',\r\n    messagingSenderId: '',\r\n    projectId: '',\r\n    authDomain: '',\r\n    storageBucket: '',\r\n    measurementId: '',\r\n  );\r\n\r\n  static const FirebaseOptions android = FirebaseOptions(\r\n    apiKey: '',\r\n    appId: '',\r\n    messagingSenderId: '',\r\n    projectId: \r\n    '',\r\n    storageBucket: '',\r\n  );\r\n\r\n  static const FirebaseOptions ios = FirebaseOptions(\r\n    apiKey: '',\r\n    appId: '',\r\n    messagingSenderId: '',\r\n    projectId: '',\r\n    storageBucket: '',\r\n    iosBundleId: '',\r\n  );\r\n}\r\n   `};\r\n}","export class Main {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    main: `\r\n// Main file template with a placeholder for fileName\r\n// import 'package:firebase_core/firebase_core.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:flutter_riverpod/flutter_riverpod.dart' as riverpod;\r\n\r\nimport '../../../../src/common/utils/shared_pref_helper.dart';\r\n\r\nvoid main() async {\r\n  WidgetsFlutterBinding.ensureInitialized();\r\n  // await Firebase.initializeApp(\r\n  //   options: DefaultFirebaseOptions.currentPlatform,\r\n  // );\r\n  await SharedPrefHelper.getInitialValue();\r\n  runApp(\r\n    riverpod.ProviderScope(\r\n      child: MultiProvider(\r\n        providers: [\r\n          // ChangeNotifierProvider(create: (_) => LocationProvider()),\r\n        ],\r\n        child: const MyApp(),\r\n      ),\r\n    ),\r\n  );\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      home: Container(),\r\n    );\r\n  }\r\n}\r\n\r\n    `,\r\n  };\r\n}\r\n","\r\n export class app_constant {\r\n  public static  fileTemplates: { [key: string]: string } = {\r\n    app_constant:  ` \r\n //const baseUrl = 'https://  com/api';`\r\n };\r\n}\r\n ","\r\n\r\n export class global_variables {\r\n  public static  fileTemplates: { [key: string]: string } = {\r\n    global_variables:  ` \r\n import 'package:flutter/material.dart';\r\n\r\nColorScheme colorScheme(context) => Theme.of(context).colorScheme;\r\n\r\nTextTheme textTheme(context) => Theme.of(context).textTheme;\r\n\r\nfinal scaffoldMessengerKey = GlobalKey<ScaffoldMessengerState>();\r\n\r\n\r\n`\r\n };\r\n}\r\n ","\r\nexport class image_paths {\r\n    public static  fileTemplates: { [key: string]: string } = {\r\n      image_paths:  ` class ImagePaths {\r\n  static const mapIcon = 'assets/icons/map_location.svg';\r\n  \r\n}`\r\n   };\r\n  }\r\n   \r\n\r\n\r\n","export class static_data {\r\n    public static  fileTemplates: { [key: string]: string } = {\r\n      static_data:  ` \r\n      \r\n  class StaticData {\r\n  static bool isFirstTime = true;\r\n  static bool isLoggedIn = false;\r\n  static String token = '';\r\n  static bool isIndividual = true;\r\n  static bool isFormFilled = false;\r\n  static bool isUserInterestSelected = false;\r\n  static int formIndex = 0;\r\n  static String language = '';\r\n  static int dashboardStartingIndex = 0;\r\n  static bool pricingPackageChoosen = false;\r\n\r\n  static String address = '';\r\n\r\n\r\n}`\r\n   };\r\n  }\r\n   \r\n\r\n\r\n\r\n\r\n","export class custom_snackbar {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\ncustom_snackbar :  ` \r\nimport '../../../../src/common/constants/global_variables.dart';\r\nimport '../../../../src/theme/app_theme.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nvoid showSnackbar({\r\n  VoidCallback? onPressed,\r\n  required String message,\r\n  IconData? icon,\r\n  Color? backgroundColor,\r\n  String? label,\r\n  bool isError = false,\r\n  bool closeButton = false,\r\n  double overflowThreshold = 1.0,\r\n  bool longActionLabel = false,\r\n  bool floatingType = true,\r\n  bool longLength = false,\r\n}) {\r\n  final appTheme = AppTheme.instance.theme;\r\n  final SnackBarAction? snackBarAction = label != null\r\n      ? SnackBarAction(\r\n          label: longActionLabel ? \"\" : label,\r\n          onPressed: onPressed ?? () {},\r\n        )\r\n      : null;\r\n\r\n  final snackBar = SnackBar(\r\n    content: Row(\r\n      children: [\r\n        Icon(\r\n          isError\r\n              ? icon ?? Icons.warning_amber_rounded\r\n              : Icons.done_all_rounded,\r\n          size: 25,\r\n          color: appTheme.colorScheme.surface,\r\n        ),\r\n        const SizedBox(width: 8),\r\n        Flexible(\r\n          child: Text(\r\n            message,\r\n            textAlign: TextAlign.start,\r\n            style: appTheme.textTheme.bodyMedium?.copyWith(\r\n              color: appTheme.colorScheme.surface,\r\n            ),\r\n          ),\r\n        ),\r\n      ],\r\n    ),\r\n    showCloseIcon: closeButton,\r\n    closeIconColor: appTheme.colorScheme.surface,\r\n    behavior: floatingType ? SnackBarBehavior.floating : SnackBarBehavior.fixed,\r\n    action: snackBarAction,\r\n    duration: Duration(milliseconds: !longLength ? 800 : 2000),\r\n    backgroundColor: isError\r\n        ? appTheme.colorScheme.error\r\n        : backgroundColor ?? const Color(0xFF424242),\r\n    shape: RoundedRectangleBorder(\r\n      borderRadius: BorderRadius.circular(10),\r\n    ),\r\n    actionOverflowThreshold: overflowThreshold,\r\n  );\r\n\r\n  scaffoldMessengerKey.currentState?.showSnackBar(snackBar);\r\n\r\n\r\n}`\r\n};\r\n }\r\n\r\n\r\n\r\n\r\n","export class custom_snakbar {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\n  custom_snakbar :  ` \r\nimport 'package:flutter/material.dart';\r\n\r\nenum SnackbarType { error, info, success }\r\n\r\nclass CustomSnackbar {\r\n  static void showSnackbar({\r\n    required BuildContext context,\r\n    required String message,\r\n    SnackbarType type = SnackbarType.info,\r\n    Duration duration = const Duration(seconds: 3),\r\n  }) {\r\n    Color backgroundColor;\r\n    IconData icon;\r\n\r\n    switch (type) {\r\n      case SnackbarType.error:\r\n        backgroundColor = Colors.red;\r\n        icon = Icons.error;\r\n        break;\r\n      case SnackbarType.info:\r\n        backgroundColor = Colors.blue;\r\n        icon = Icons.info;\r\n        break;\r\n      case SnackbarType.success:\r\n        backgroundColor = Colors.green;\r\n        icon = Icons.check_circle;\r\n        break;\r\n    }\r\n\r\n    final snackBar = SnackBar(\r\n      content: Row(\r\n        children: [\r\n          Icon(icon, color: Colors.white),\r\n          const SizedBox(width: 8.0),\r\n          Expanded(\r\n            child: Text(\r\n              message,\r\n              style: const TextStyle(color: Colors.white),\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n      backgroundColor: backgroundColor,\r\n      duration: duration,\r\n      behavior: SnackBarBehavior.floating,\r\n    );\r\n    ScaffoldMessenger.of(context).clearSnackBars();\r\n    ScaffoldMessenger.of(context).showSnackBar(snackBar);\r\n  }\r\n\r\n}`\r\n};\r\n }\r\n\r\n\r\n","export class shared_pref_helper {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    shared_pref_helper: ` \r\nimport 'package:shared_preferences/shared_preferences.dart';\r\n\r\n\r\n\r\nclass SharedPrefHelper {\r\n  static late SharedPreferences _prefs;\r\n\r\n  static getInitialValue() async {\r\n    _prefs = await SharedPreferences.getInstance();\r\n   \r\n  \r\n  }\r\n\r\n  // Save a string value\r\n  static saveString(String key, String value) async {\r\n    await _prefs.setString(key, value);\r\n  }\r\n\r\n  // Retrieve a string value\r\n  static getString(String key) async {\r\n    return _prefs.getString(key);\r\n  }\r\n\r\n\r\n  \r\n\r\n  // Save a boolean value\r\n  static saveBool(String key, bool value) async {\r\n    await _prefs.setBool(key, value);\r\n  }\r\n\r\n  // Retrieve a boolean value\r\n  static getBool(String key) async {\r\n    return _prefs.getBool(key);\r\n  }\r\n\r\n  // Save an integer value\r\n  static saveInt(String key, int value) async {\r\n    await _prefs.setInt(key, value);\r\n  }\r\n\r\n  // Retrieve an integer value\r\n  static getInt(String key) async {\r\n    return _prefs.getInt(key);\r\n  }\r\n\r\n  // Save a double value\r\n  static saveDouble(String key, double value) async {\r\n    await _prefs.setDouble(key, value);\r\n  }\r\n\r\n  // Retrieve a double value\r\n  static getDouble(String key) async {\r\n    return _prefs.getDouble(key);\r\n  }\r\n\r\n  // Remove a value\r\n  static remove(String key) async {\r\n    await _prefs.remove(key);\r\n  }\r\n\r\n  // Clear all values\r\n  static clearAll() async {\r\n    await _prefs.clear();\r\n  }\r\n\r\n\r\n}`,\r\n  };\r\n}\r\n","export class validation {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    validation: ` import '../../../../generated/locales.g.dart';\r\nimport 'package:get/get.dart';\r\n\r\nclass Validation {\r\n  // static String? fieldValidation(String? value, String field) {\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return '$/{LocaleKeys.validation_please_fill.tr/} $field';\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? emaiValidation(String? value) {\r\n  //   String pattern = r'^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[\\w-]{2,4}$';\r\n  //   RegExp regex = RegExp(pattern);\r\n  //   if (!regex.hasMatch(value!.trim())) {\r\n  //     return LocaleKeys.validation_please_enter_a_valid_email.tr;\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? usernameValidation(String? value) {\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return LocaleKeys.validation_please_enter_some_text.tr;\r\n  //   }\r\n  //   if (value.length < 3) {\r\n  //     return LocaleKeys\r\n  //         .validation_username_must_be_at_least_3_characters_long.tr;\r\n  //   }\r\n  //   if (value.length > 20) {\r\n  //     return LocaleKeys.validation_username_must_not_exceed_20_characters.tr;\r\n  //   }\r\n  //   if (!RegExp(r'^[a-zA-Z0-9._]+$').hasMatch(value)) {\r\n  //     return LocaleKeys\r\n  //         .validation_username_can_only_contain_letters_numbers_periods_and_underscores\r\n  //         .tr;\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? passwordValidation(String? value) {\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return LocaleKeys.validation_please_enter_a_password.tr;\r\n  //   }\r\n  //   if (value.length < 6) {\r\n  //     return LocaleKeys.validation_password_is_too_weak.tr;\r\n  //   }\r\n  //   // if (!value.contains(RegExp(r'[A-Z]'))) {\r\n  //   //   return 'Password must contain at least one uppercase letter';\r\n  //   // }\r\n  //   // if (!value.contains(RegExp(r'[a-z]'))) {\r\n  //   //   return 'Password must contain at least one lowercase letter';\r\n  //   // }\r\n  //   // if (!value.contains(RegExp(r'[0-9]'))) {\r\n  //   //   return 'Password must contain at least one digit';\r\n  //   // }\r\n  //   // if (!value.contains(RegExp(r'[!@#$%^&*(),.?\":{}|<>]'))) {\r\n  //   //   return 'Password must contain at least one special character';\r\n  //   // }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? confirmPasswordValidation(String? value, String password) {\r\n  //   String? passwordError = passwordValidation(password);\r\n  //   if (passwordError != null) {\r\n  //     return passwordError;\r\n  //   }\r\n\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return LocaleKeys.validation_please_confirm_your_password.tr;\r\n  //   }\r\n  //   if (value != password) {\r\n  //     return LocaleKeys.validation_passwords_dont_match.tr;\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? phoneNumberValidation(String? value) {\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return LocaleKeys.validation_please_enter_a_phone_number.tr;\r\n  //   }\r\n  //   // RegExp regex = RegExp(r'^\\+\\d{1,3}\\d{10,14}$');\r\n  //   RegExp regex = RegExp(r'^\\d{10,12}$');\r\n  //   if (!regex.hasMatch(value)) {\r\n  //     return LocaleKeys.validation_please_enter_a_valid_phone_number.tr;\r\n  //   }\r\n  //   return null;\r\n  // } // static String? fieldValidation(String? value, String field) {\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return '$/{LocaleKeys.validation_please_fill.tr/} $field';\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? emaiValidation(String? value) {\r\n  //   String pattern = r'^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[\\w-]{2,4}$';\r\n  //   RegExp regex = RegExp(pattern);\r\n  //   if (!regex.hasMatch(value!.trim())) {\r\n  //     return LocaleKeys.validation_please_enter_a_valid_email.tr;\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? usernameValidation(String? value) {\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return LocaleKeys.validation_please_enter_some_text.tr;\r\n  //   }\r\n  //   if (value.length < 3) {\r\n  //     return LocaleKeys\r\n  //         .validation_username_must_be_at_least_3_characters_long.tr;\r\n  //   }\r\n  //   if (value.length > 20) {\r\n  //     return LocaleKeys.validation_username_must_not_exceed_20_characters.tr;\r\n  //   }\r\n  //   if (!RegExp(r'^[a-zA-Z0-9._]+$').hasMatch(value)) {\r\n  //     return LocaleKeys\r\n  //         .validation_username_can_only_contain_letters_numbers_periods_and_underscores\r\n  //         .tr;\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? passwordValidation(String? value) {\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return LocaleKeys.validation_please_enter_a_password.tr;\r\n  //   }\r\n  //   if (value.length < 6) {\r\n  //     return LocaleKeys.validation_password_is_too_weak.tr;\r\n  //   }\r\n  //   // if (!value.contains(RegExp(r'[A-Z]'))) {\r\n  //   //   return 'Password must contain at least one uppercase letter';\r\n  //   // }\r\n  //   // if (!value.contains(RegExp(r'[a-z]'))) {\r\n  //   //   return 'Password must contain at least one lowercase letter';\r\n  //   // }\r\n  //   // if (!value.contains(RegExp(r'[0-9]'))) {\r\n  //   //   return 'Password must contain at least one digit';\r\n  //   // }\r\n  //   // if (!value.contains(RegExp(r'[!@#$%^&*(),.?\":{}|<>]'))) {\r\n  //   //   return 'Password must contain at least one special character';\r\n  //   // }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? confirmPasswordValidation(String? value, String password) {\r\n  //   String? passwordError = passwordValidation(password);\r\n  //   if (passwordError != null) {\r\n  //     return passwordError;\r\n  //   }\r\n\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return LocaleKeys.validation_please_confirm_your_password.tr;\r\n  //   }\r\n  //   if (value != password) {\r\n  //     return LocaleKeys.validation_passwords_dont_match.tr;\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  // static String? phoneNumberValidation(String? value) {\r\n  //   if (value == null || value.isEmpty) {\r\n  //     return LocaleKeys.validation_please_enter_a_phone_number.tr;\r\n  //   }\r\n  //   // RegExp regex = RegExp(r'^\\+\\d{1,3}\\d{10,14}$');\r\n  //   RegExp regex = RegExp(r'^\\d{10,12}$');\r\n  //   if (!regex.hasMatch(value)) {\r\n  //     return LocaleKeys.validation_please_enter_a_valid_phone_number.tr;\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n\r\n}`,\r\n  };\r\n}\r\n","export class custom_button {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    custom_button: ` \r\nimport '../../../../src/common/constants/global_variables.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nclass CustomButton extends StatelessWidget {\r\n  final VoidCallback onPressed;\r\n  final String text;\r\n  final bool isIcon;\r\n  final Color? bgClr;\r\n  final Color? txtClr;\r\n  final bool isBorder;\r\n  const CustomButton({\r\n    super.key,\r\n    this.isIcon = false,\r\n    this.bgClr,\r\n    this.txtClr,\r\n    this.isBorder = false,\r\n    required this.onPressed,\r\n    // this.text = \"Next\",\r\n    this.text = \"LocaleKeys.button_next\",\r\n  });\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return SizedBox(\r\n      width: MediaQuery.of(context).size.width * 0.9,\r\n      height: 50,\r\n      child: TextButton(\r\n        onPressed: onPressed,\r\n        style: TextButton.styleFrom(\r\n          backgroundColor: bgClr ?? colorScheme(context).primary,\r\n          shape: RoundedRectangleBorder(\r\n            borderRadius: BorderRadius.circular(10),\r\n            side: isBorder\r\n                ? BorderSide(color: colorScheme(context).primary)\r\n                : BorderSide.none,\r\n          ),\r\n        ),\r\n        child: Row(\r\n          mainAxisAlignment: MainAxisAlignment.center,\r\n          crossAxisAlignment: CrossAxisAlignment.center,\r\n          children: [\r\n            if (isIcon)\r\n              Icon(\r\n                Icons.send,\r\n                color: colorScheme(context).surface,\r\n              ),\r\n            const SizedBox(\r\n              width: 10,\r\n            ),\r\n            Flexible(\r\n              child: Text(\r\n                text,\r\n                maxLines: 1,\r\n                overflow: TextOverflow.ellipsis,\r\n                style: textTheme(context).bodyLarge?.copyWith(\r\n                    color: txtClr ?? colorScheme(context).onPrimary,\r\n                    fontWeight: FontWeight.w700),\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","export class custom_textfield {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    custom_textfield: ` \r\n    import 'package:flutter/material.dart';\r\nimport 'package:flutter/services.dart';\r\nimport '../../../src/common/constants/global_variables.dart';\r\n\r\nclass CustomTextField extends StatelessWidget {\r\n  final String? hintText;\r\n  final TextEditingController? controller;\r\n  final void Function(String)? onChanged;\r\n  final Widget? suffixIcon;\r\n  final List<TextInputFormatter>? textInputFormatter;\r\n  final bool isVisibleText;\r\n  final Color? fillColor;\r\n  final FormFieldValidator<String>? validator;\r\n  final double? width;\r\n  final TextStyle? hintStyle;\r\n  final TextStyle? suffixStyle;\r\n  final IconData? iconData;\r\n  final int maxLines;\r\n  final TextInputType? keyboardType;\r\n  final bool? readOnly;\r\n  final bool? obscureText;\r\n\r\n  const CustomTextField({\r\n    super.key,\r\n    this.iconData,\r\n    this.controller,\r\n    this.textInputFormatter,\r\n    this.suffixStyle,\r\n    this.hintText,\r\n    this.fillColor,\r\n    this.isVisibleText = false,\r\n    this.readOnly = false,\r\n    this.hintStyle,\r\n    this.suffixIcon,\r\n    this.maxLines = 1,\r\n    this.keyboardType,\r\n    this.width,\r\n    this.onChanged,\r\n    this.obscureText = false,\r\n    this.validator,\r\n  });\r\n\r\n  @override\r\n  build(BuildContext context) {\r\n    return TextFormField(\r\n      validator: validator,\r\n      inputFormatters: textInputFormatter,\r\n      autovalidateMode: AutovalidateMode.onUserInteraction,\r\n      onChanged: onChanged,\r\n      controller: controller,\r\n      keyboardType: keyboardType,\r\n      maxLines: maxLines,\r\n      readOnly: readOnly!,\r\n      obscureText: obscureText!,\r\n      obscuringCharacter: '●',\r\n      style: textTheme(context).bodyMedium,\r\n      decoration: InputDecoration(\r\n        hintText: hintText,\r\n        hintStyle: hintStyle ??\r\n            textTheme(context)\r\n                .bodyMedium\r\n                ?.copyWith(color: colorScheme(context).outlineVariant),\r\n        fillColor: Colors.transparent,\r\n        contentPadding: EdgeInsets.all(20),\r\n        suffixIcon: suffixIcon,\r\n        suffixStyle: suffixStyle,\r\n        prefixIcon: iconData != null ? Icon(iconData) : null,\r\n        enabledBorder: OutlineInputBorder(\r\n            borderSide: BorderSide(\r\n                color: colorScheme(context).primaryContainer, width: 1),\r\n            borderRadius: BorderRadius.circular(18)),\r\n        focusedBorder: OutlineInputBorder(\r\n            borderSide: BorderSide(\r\n                color: colorScheme(context).primaryContainer, width: 1),\r\n            borderRadius: BorderRadius.circular(18)),\r\n        errorBorder: OutlineInputBorder(\r\n            borderSide: BorderSide(\r\n              color: colorScheme(context).error,\r\n              width: 1,\r\n            ),\r\n            borderRadius: BorderRadius.circular(18)),\r\n        focusedErrorBorder: OutlineInputBorder(\r\n            borderSide: BorderSide(\r\n              color: colorScheme(context).error,\r\n              width: 1,\r\n            ),\r\n            borderRadius: BorderRadius.circular(18)),\r\n        filled: true,\r\n        border: const OutlineInputBorder(borderSide: BorderSide.none),\r\n      ),\r\n    );\r\n  }\r\n\r\n\r\n}`,\r\n  };\r\n}\r\n","\r\nexport class error_route {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\n  error_route :  ` import 'package:flutter/material.dart';\r\n\r\nclass ErrorPage extends StatelessWidget {\r\n  const ErrorPage({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        centerTitle: true,\r\n        title: const Text('ErrorPage router'),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n","\r\n\r\nexport class route_transition {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\nroute_transition :  ` import 'package:flutter/material.dart';\r\nimport 'package:go_router/go_router.dart';\r\n\r\nCustomTransitionPage buildPageWithDefaultTransition<T>({\r\n  required BuildContext context,\r\n  required GoRouterState state,\r\n  required Widget child,\r\n}) {\r\n  return CustomTransitionPage<T>(\r\n    key: state.pageKey,\r\n    child: child,\r\n    transitionsBuilder: (context, animation, secondaryAnimation, child) =>\r\n        SlideTransition(\r\n      position: Tween<Offset>(\r\n        begin: const Offset(1.0, 0.0),\r\n        end: Offset.zero,\r\n      ).animate(animation),\r\n      child: child,\r\n    ),\r\n  );\r\n}\r\n\r\nCustomTransitionPage buildPageWithFadeTransition<T>({\r\n  required BuildContext context,\r\n  required GoRouterState state,\r\n  required Widget child,\r\n}) {\r\n  return CustomTransitionPage<T>(\r\n    key: state.pageKey,\r\n    child: child,\r\n    transitionsBuilder: (context, animation, secondaryAnimation, child) =>\r\n        FadeTransition(\r\n      opacity: animation,\r\n      child: child,\r\n    ),\r\n  );\r\n}\r\n\r\n`\r\n};\r\n }\r\n\r\n","export class routes {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    routes: `\r\n\r\nimport '../router/error_route.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:go_router/go_router.dart';\r\n\r\nclass MyAppRouter {\r\n  static final router = GoRouter(\r\n    initialLocation: '/',\r\n    routes: [\r\n      \r\n      // GoRoute(\r\n      //   name: AppRoute.signin,\r\n      //   path: '/signin',\r\n      //   pageBuilder: (context, state) => buildPageWithFadeTransition<void>(\r\n      //       context: context, state: state, child: const SignInPage()),\r\n      // ),\r\n      // GoRoute(\r\n      //   name: AppRoute.signup,\r\n      //   path: '/signup',\r\n      //   pageBuilder: (context, state) => buildPageWithFadeTransition<void>(\r\n      //       context: context, state: state, child: const SignUpPage()),\r\n      // ),\r\n     \r\n    ],\r\n    errorPageBuilder: (context, state) {\r\n      return const MaterialPage(child: ErrorPage());\r\n    },\r\n  );\r\n  static void clearAndNavigate(BuildContext context, String name) {\r\n    while (context.canPop() == true) {\r\n      context.pop();\r\n    }\r\n    context.pushReplacementNamed(name);\r\n  }\r\n}\r\n\r\nclass AppRoute {\r\n  \r\n  //auth\r\n  static const String signin = 'signin';\r\n  static const String signup = 'signup';\r\n  \r\n}\r\n\r\n`,\r\n  };\r\n}\r\n","export class app_theme {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    app_theme: ` \r\nimport '../../../../src/theme/widget_theme/tab_bar_theme.dart';\r\n\r\nimport '../../../../src/theme/widget_theme/text_theme.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'color_scheme.dart';\r\n\r\nclass AppTheme {\r\n  AppTheme._();\r\n\r\n  factory AppTheme() {\r\n    return instance;\r\n  }\r\n\r\n  static final AppTheme instance = AppTheme._();\r\n\r\n  ThemeData get theme => ThemeData(\r\n        useMaterial3: true,\r\n        textTheme: appTextTheme,\r\n        tabBarTheme: tabBarTheme,\r\n        dividerTheme: DividerThemeData(\r\n          color: appColorScheme.outlineVariant.withOpacity(0.1),\r\n        ),\r\n        splashColor: Colors.transparent,\r\n        colorScheme: appColorScheme,\r\n      );\r\n\r\n  }\r\n`,\r\n  };\r\n}\r\n","export class color_scheme {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    color_scheme: ` import 'package:flutter/material.dart';\r\n\r\nColorScheme get appColorScheme => const ColorScheme(\r\n      brightness: Brightness.light,\r\n      primary: Color(0xFF558AF0),\r\n      onPrimary: Colors.white,\r\n      primaryContainer: Color(0xffF0F5FA),\r\n      onPrimaryContainer: Color(0xff121223),\r\n      secondary: Color(0xff525FE1),\r\n      onSecondary: Colors.white,\r\n      outline: Color(0xFFF9F9F9),\r\n      outlineVariant: Color(0xFF858C95),\r\n      tertiary: Colors.amber,\r\n      onTertiary: Colors.white,\r\n      error: Colors.red,\r\n      onError: Colors.red,\r\n      surface: Colors.white,\r\n      onSurface: Colors.black,\r\n    );\r\n\r\n`,\r\n  };\r\n}\r\n","\r\nexport class tab_bar_theme {\r\npublic static  fileTemplates: { [key: string]: string } = {\r\ntab_bar_theme :  ` import '../../../../src/theme/color_scheme.dart';\r\nimport '../../../../src/theme/widget_theme/text_theme.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nTabBarTheme get tabBarTheme => TabBarTheme(\r\n      labelStyle: appTextTheme.bodyLarge?.copyWith(\r\n          color: appColorScheme.surface, fontWeight: FontWeight.w400),\r\n      unselectedLabelStyle: appTextTheme.bodyLarge?.copyWith(\r\n          color: appColorScheme.onPrimary.withOpacity(0.7),\r\n          fontWeight: FontWeight.w400),\r\n      indicatorSize: TabBarIndicatorSize.label,\r\n      indicatorColor: Colors.transparent,\r\n    );\r\n\r\n`\r\n};\r\n }\r\n\r\n","export class text_theme {\r\n  public static fileTemplates: { [key: string]: string } = {\r\n    text_theme: ` import 'package:flutter/material.dart';\r\nimport 'package:google_fonts/google_fonts.dart';\r\n\r\nTextTheme get appTextTheme => TextTheme(\r\n      displayLarge: GoogleFonts.poppins(\r\n        fontSize: 57.0,\r\n        fontWeight: FontWeight.w400,\r\n        letterSpacing: -0.25,\r\n      ),\r\n      displayMedium: GoogleFonts.poppins(\r\n        fontSize: 45.0,\r\n        fontWeight: FontWeight.w400,\r\n      ),\r\n      displaySmall: GoogleFonts.poppins(\r\n        fontSize: 36.0,\r\n        fontWeight: FontWeight.w400,\r\n      ),\r\n      headlineLarge: GoogleFonts.poppins(\r\n        fontSize: 32.0,\r\n        fontWeight: FontWeight.w400,\r\n      ),\r\n      headlineMedium: GoogleFonts.poppins(\r\n        fontSize: 22.0,\r\n        fontWeight: FontWeight.w400,\r\n      ),\r\n      headlineSmall: GoogleFonts.poppins(\r\n        fontSize: 20.0,\r\n        fontWeight: FontWeight.bold,\r\n      ),\r\n      titleLarge: GoogleFonts.poppins(\r\n        fontSize: 22.0,\r\n        fontWeight: FontWeight.w500,\r\n      ),\r\n      titleMedium: GoogleFonts.poppins(\r\n        fontSize: 18.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 0.15,\r\n      ),\r\n      titleSmall: GoogleFonts.poppins(\r\n        fontSize: 16.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 0.1,\r\n      ),\r\n      bodyLarge: GoogleFonts.poppins(\r\n        fontSize: 14.0,\r\n        fontWeight: FontWeight.w400,\r\n        letterSpacing: 0.5,\r\n      ),\r\n      bodyMedium: GoogleFonts.poppins(\r\n        fontSize: 14.0,\r\n        fontWeight: FontWeight.w400,\r\n        letterSpacing: 0.25,\r\n      ),\r\n      bodySmall: GoogleFonts.poppins(\r\n        fontSize: 12.0,\r\n        fontWeight: FontWeight.w400,\r\n        letterSpacing: 0.4,\r\n      ),\r\n      labelLarge: GoogleFonts.poppins(\r\n        fontSize: 14.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 1.25,\r\n      ),\r\n      labelMedium: GoogleFonts.poppins(\r\n        fontSize: 12.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 1.25,\r\n      ),\r\n      labelSmall: GoogleFonts.poppins(\r\n        fontSize: 11.0,\r\n        fontWeight: FontWeight.w500,\r\n        letterSpacing: 1.5,\r\n      ),\r\n    );\r\n\r\n`,\r\n  };\r\n}\r\n","import * as vscode from \"vscode\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as _ from \"lodash\";\r\nimport { Featurecontroller } from \"../Features/controllers/feature_controller\";\r\nimport { FeatureState } from \"../Features/controllers/feature_state\";\r\nimport { FeatureRepository } from \"../Features/repository/feature_repository\";\r\n\r\nexport class FeatureUtils {\r\n  // Function to get the feature name from the user input\r\n  static async getFeatureName(): Promise<string | undefined> {\r\n    const featureName = await vscode.window.showInputBox({\r\n      placeHolder: \"Enter the name of the feature (e.g., Auth)\",\r\n      prompt: \"Create new feature folder\",\r\n    });\r\n    return featureName;\r\n  }\r\n\r\n  // Function to create the folder structure for a given feature\r\n  static createFeatureStructure(rootPath: string, featureName: string) {\r\n    if (!featureName) {\r\n      vscode.window.showErrorMessage(\"Feature name cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    const featurePath = path.join(\r\n      rootPath,\r\n      \"lib\",\r\n      \"src\",\r\n      \"features\",\r\n      featureName.toLowerCase()\r\n    );\r\n\r\n    // Define folder structure inside the feature folder\r\n    const folders = [\"controllers\", \"pages\", \"repository\", \"models\"];\r\n\r\n    // Create the folders\r\n    folders.forEach((folder) => {\r\n      const folderPath = path.join(featurePath, folder);\r\n      fs.mkdirSync(folderPath, { recursive: true });\r\n    });\r\n\r\n    // Generate file paths for the files inside the feature\r\n    const controllerFilePath = path.join(\r\n      featurePath,\r\n      \"controllers\",\r\n      `${featureName.toLowerCase()}_controller.dart`\r\n    );\r\n    const stateFilePath = path.join(\r\n      featurePath,\r\n      \"controllers\",\r\n      `${featureName.toLowerCase()}_state.dart`\r\n    );\r\n    const repositoryFilePath = path.join(\r\n      featurePath,\r\n      \"repository\",\r\n      `${featureName.toLowerCase()}_repository.dart`\r\n    );\r\n\r\n    // Fetch the file content from FeatureFileTemplates\r\n    const controllerContent =\r\n      Featurecontroller.fileTemplates.controller(featureName);\r\n    const stateContent = FeatureState.fileTemplates.state(featureName);\r\n    const repositoryContent =\r\n      FeatureRepository.fileTemplates.repository(featureName);\r\n\r\n    // Write content to the respective files\r\n    fs.writeFileSync(controllerFilePath, controllerContent);\r\n    fs.writeFileSync(stateFilePath, stateContent);\r\n    fs.writeFileSync(repositoryFilePath, repositoryContent);\r\n\r\n    vscode.window.showInformationMessage(\r\n      `Feature \"${capitalize(featureName)}\" created successfully!`\r\n    );\r\n  }\r\n}\r\n\r\n// Utility function to capitalize the first letter of a string\r\nfunction capitalize(str: string): string {\r\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\n}\r\n","import * as vscode from \"vscode\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as _ from \"lodash\";\r\n\r\nexport class YamalUtility {\r\n  static requiredPackages: { [key: string]: string } = {\r\n    google_fonts: \"^6.2.1\",\r\n    provider: \"^6.1.2\",\r\n    device_preview: \"^1.2.0\",\r\n    flutter_svg: \"^2.0.10+1\",\r\n    flutter_riverpod: \"^2.0.0\",\r\n    image_picker: \"^1.1.2\",\r\n    go_router: \"^14.2.2\",\r\n    loader_overlay: \"^4.0.1\",\r\n    fpdart: \"^1.1.0\",\r\n    firebase_core: \"^3.3.0\",\r\n    shared_preferences: \"^2.3.2\",\r\n    get: \"^4.6.6\",\r\n  };\r\n\r\n  public static updatePubspecYaml(rootPath: string) {\r\n    const pubspecPath = path.join(rootPath, \"pubspec.yaml\");\r\n\r\n    if (fs.existsSync(pubspecPath)) {\r\n      let pubspecContent = fs.readFileSync(pubspecPath, \"utf-8\");\r\n\r\n      for (const [pkg, version] of Object.entries(\r\n        YamalUtility.requiredPackages\r\n      )) {\r\n        if (!pubspecContent.includes(pkg)) {\r\n          pubspecContent += `\\n  ${pkg}: ${version}`;\r\n        }\r\n      }\r\n\r\n      fs.writeFileSync(pubspecPath, pubspecContent);\r\n      vscode.window.showInformationMessage(\r\n        \"pubspec.yaml updated with required packages.\"\r\n      );\r\n    } else {\r\n      vscode.window.showErrorMessage(\"pubspec.yaml not found.\");\r\n    }\r\n  }\r\n}\r\n","import * as vscode from \"vscode\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as _ from \"lodash\";\r\nimport { ImportsManager } from \"./dart_snippets/NextWayArchitecture/ImportsManager\";\r\nimport { YamalUtility } from \"./dart_snippets/NextWayArchitecture/utils/yamal_utils\";\r\nimport { FeatureUtils } from \"./dart_snippets/NextWayArchitecture/utils/feature_utils\";\r\nimport { ImportsManagerMvvm } from \"./dart_snippets/MVVM/importsManager\";\r\nimport { MvvmYamalUtility } from \"./dart_snippets/MVVM/mvvm_yamal_utils\";\r\nimport { MVCManager } from \"./dart_snippets/MVCArchitecture/mvc_manager\";\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  let disposable = vscode.commands.registerCommand(\r\n    \"flutter-archichitecture.createNextWaysArchitecture\",\r\n    async () => {\r\n      const fileTemplates: { [key: string]: string } = {\r\n        ...ImportsManager.Main.fileTemplates,\r\n        ...ImportsManager.firebase_options.fileTemplates,\r\n        ...ImportsManager.app_constant.fileTemplates,\r\n        ...ImportsManager.global_variables.fileTemplates,\r\n        ...ImportsManager.image_paths.fileTemplates,\r\n        ...ImportsManager.static_data.fileTemplates,\r\n        ...ImportsManager.custom_snackbar.fileTemplates,\r\n        ...ImportsManager.custom_snakbar.fileTemplates,\r\n        ...ImportsManager.shared_pref_helper.fileTemplates,\r\n        ...ImportsManager.validation.fileTemplates,\r\n        ...ImportsManager.custom_button.fileTemplates,\r\n        ...ImportsManager.custom_textfield.fileTemplates,\r\n        ...ImportsManager.error_route.fileTemplates,\r\n        ...ImportsManager.route_transition.fileTemplates,\r\n        ...ImportsManager.routes.fileTemplates,\r\n        ...ImportsManager.tab_bar_theme.fileTemplates,\r\n        ...ImportsManager.text_theme.fileTemplates,\r\n        ...ImportsManager.app_theme.fileTemplates,\r\n        ...ImportsManager.color_scheme.fileTemplates,\r\n      };\r\n\r\n      const workspaceFolders = vscode.workspace.workspaceFolders;\r\n\r\n      if (!workspaceFolders) {\r\n        vscode.window.showErrorMessage(\"No workspace folder found.\");\r\n        return;\r\n      }\r\n\r\n      const rootPath = workspaceFolders[0].uri.fsPath;\r\n\r\n      const architecture = {\r\n        lib: [\r\n          { files: [\"main.dart\"] },\r\n          { folder: \"src\", files: [] },\r\n          { folder: \"src/common\", files: [] },\r\n          {\r\n            folder: \"src/common/constants\",\r\n            files: [\r\n              \"app_constant.dart\",\r\n              \"global_variables.dart\",\r\n              \"image_paths.dart\",\r\n              \"static_data.dart\",\r\n            ],\r\n          },\r\n          { folder: \"src/common/providers\", files: [] },\r\n          {\r\n            folder: \"src/common/services/language\",\r\n            files: [],\r\n          },\r\n          {\r\n            folder: \"src/common/utils\",\r\n            files: [\r\n              \"custom_snackbar.dart\",\r\n              \"custom_snakbar.dart\",\r\n              \"shared_pref_helper.dart\",\r\n            ],\r\n          },\r\n          {\r\n            folder: \"src/common/widgets\",\r\n            files: [\"custom_button.dart\", \"custom_textfield.dart\"],\r\n          },\r\n          { folder: \"src/features\", files: [] },\r\n\r\n          { folder: \"src/models\", files: [] },\r\n          {\r\n            folder: \"src/router\",\r\n            files: [\"error_route.dart\", \"route_transition.dart\", \"routes.dart\"],\r\n          },\r\n          {\r\n            folder: \"src/theme/widget_theme\",\r\n            files: [\"tab_bar_theme.dart\", \"text_theme.dart\"],\r\n          },\r\n          {\r\n            folder: \"src/theme\",\r\n            files: [\"app_theme.dart\", \"color_scheme.dart\"],\r\n          },\r\n        ],\r\n      };\r\n\r\n      // Generate architecture files and folders\r\n      for (const folder of architecture.lib) {\r\n        const folderPath = folder.folder\r\n          ? path.join(rootPath, \"lib\", folder.folder)\r\n          : path.join(rootPath, \"lib\");\r\n        fs.mkdirSync(folderPath, { recursive: true });\r\n\r\n        for (const file of folder.files) {\r\n          const fileName = file.split(\".\")[0];\r\n          const fileContent = fileTemplates[fileName];\r\n          const filePath = path.join(folderPath, file);\r\n          fs.writeFileSync(filePath, fileContent, { flag: \"wx\" });\r\n        }\r\n      }\r\n\r\n      // Call to update pubspec.yaml\r\n      YamalUtility.updatePubspecYaml(rootPath);\r\n\r\n      vscode.window.showInformationMessage(\r\n        \"Flutter architecture with Dart files created successfully!\"\r\n      );\r\n    }\r\n  );\r\n  //##########################################################################\r\n  //##########################################################################\r\n  //####################     F E A T U R E S     #############################\r\n  //##########################################################################\r\n  //##########################################################################\r\n\r\n  let featurecmd = vscode.commands.registerCommand(\r\n    \"flutter-architecture.createFeature\",\r\n    async () => {\r\n      const workspaceFolders = vscode.workspace.workspaceFolders;\r\n      if (!workspaceFolders) {\r\n        vscode.window.showErrorMessage(\"No workspace folder found.\");\r\n        return;\r\n      }\r\n\r\n      const rootPath = workspaceFolders[0].uri.fsPath;\r\n      const featureName = await FeatureUtils.getFeatureName();\r\n\r\n      if (featureName) {\r\n        FeatureUtils.createFeatureStructure(rootPath, featureName);\r\n      } else {\r\n        vscode.window.showErrorMessage(\"Feature name is required.\");\r\n      }\r\n    }\r\n  );\r\n\r\n  //##########################################################################\r\n  //##########################################################################\r\n  //####################          M V V M        #############################\r\n  //##########################################################################\r\n  //##########################################################################\r\n\r\n  let mvvm = vscode.commands.registerCommand(\r\n    \"flutter-archichitecture.createMVVMArchitecture\",\r\n    async () => {\r\n      const fileTemplates: { [key: string]: string } = {\r\n        ...ImportsManagerMvvm.Main.fileTemplates,\r\n        ...ImportsManagerMvvm.generated_plugin_registrant.fileTemplates,\r\n        ...ImportsManagerMvvm.app_url.fileTemplates,\r\n        ...ImportsManagerMvvm.exceptions.fileTemplates,\r\n        ...ImportsManagerMvvm.utils.fileTemplates,\r\n        ...ImportsManagerMvvm.color.fileTemplates,\r\n        ...ImportsManagerMvvm.internet_exception_widget.fileTemplates,\r\n        ...ImportsManagerMvvm.loading_widget.fileTemplates,\r\n        ...ImportsManagerMvvm.app_exceptions.fileTemplates,\r\n        ...ImportsManagerMvvm.network_image_widget.fileTemplates,\r\n        ...ImportsManagerMvvm.round_button.fileTemplates,\r\n        ...ImportsManagerMvvm.routes_name.fileTemplates,\r\n        ...ImportsManagerMvvm.route.fileTemplates,\r\n        ...ImportsManagerMvvm.base_api_services.fileTemplates,\r\n        ...ImportsManagerMvvm.network_api_services.fileTemplates,\r\n        ...ImportsManagerMvvm.api_response.fileTemplates,\r\n        ...ImportsManagerMvvm.status.fileTemplates,\r\n      };\r\n\r\n      const workspaceFolders = vscode.workspace.workspaceFolders;\r\n\r\n      if (!workspaceFolders) {\r\n        vscode.window.showErrorMessage(\"No workspace folder found.\");\r\n        return;\r\n      }\r\n\r\n      const rootPath = workspaceFolders[0].uri.fsPath;\r\n\r\n      const architecture = {\r\n        lib: [\r\n          { files: [\"main.dart\"] },\r\n          { files: [\"generated_plugin_registrant.dart\"] },\r\n          {\r\n            folder: \"configs\",\r\n            files: [\"app_url.dart\", \"exceptions.dart\", \"utils.dart\"],\r\n          },\r\n          { folder: \"configs/color\", files: [\"color.dart\"] },\r\n          {\r\n            folder: \"configs/componets\",\r\n            files: [\r\n              \"internet_exception_widget.dart\",\r\n              \"loading_widget.dart\",\r\n              \"network_image_widget.dart\",\r\n              \"round_button.dart\",\r\n            ],\r\n          },\r\n          {\r\n            folder: \"configs/routes\",\r\n            files: [\"routes_name.dart\", \"routes.dart\"],\r\n          },\r\n          {\r\n            folder: \"configs/validator\",\r\n            files: [],\r\n          },\r\n          {\r\n            folder: \"data\",\r\n            files: [\"app_exceptions.dart\"],\r\n          },\r\n          {\r\n            folder: \"data/network\",\r\n            files: [\"base_api_services.dart\", \"network_api_services.dart\"],\r\n          },\r\n          {\r\n            folder: \"data/response\",\r\n            files: [\"api_response.dart\", \"status.dart\"],\r\n          },\r\n          {\r\n            folder: \"data/models\",\r\n            files: [],\r\n          },\r\n          {\r\n            folder: \"data/repository\",\r\n            files: [],\r\n          },\r\n          {\r\n            folder: \"data/view\",\r\n            files: [],\r\n          },\r\n          {\r\n            folder: \"data/view_model\",\r\n            files: [],\r\n          },\r\n        ],\r\n      };\r\n\r\n      // Generate architecture files and folders\r\n      for (const folder of architecture.lib) {\r\n        const folderPath = folder.folder\r\n          ? path.join(rootPath, \"lib\", folder.folder)\r\n          : path.join(rootPath, \"lib\");\r\n        fs.mkdirSync(folderPath, { recursive: true });\r\n\r\n        for (const file of folder.files) {\r\n          const fileName = file.split(\".\")[0];\r\n          const fileContent = fileTemplates[fileName];\r\n          const filePath = path.join(folderPath, file);\r\n          fs.writeFileSync(filePath, fileContent, { flag: \"wx\" });\r\n        }\r\n      }\r\n\r\n      // Call to update pubspec.yaml\r\n      MvvmYamalUtility.updateMvvmPubspecYaml(rootPath);\r\n\r\n      vscode.window.showInformationMessage(\r\n        \"Flutter architecture with Dart files created successfully!\"\r\n      );\r\n    }\r\n  );\r\n\r\n  let mvcDisposable = vscode.commands.registerCommand(\r\n    \"flutter-archichitecture.createMVCArchitecture\",\r\n    async () => {\r\n      // Get the workspace folder\r\n      const workspaceFolders = vscode.workspace.workspaceFolders;\r\n      if (!workspaceFolders) {\r\n        vscode.window.showErrorMessage(\"No workspace folder found.\");\r\n        return;\r\n      }\r\n\r\n      // Use the first workspace folder as root path\r\n      const rootPath = workspaceFolders[0].uri.fsPath;\r\n      MVCManager.createMVCStructure(rootPath);\r\n    }\r\n  );\r\n\r\n  context.subscriptions.push(featurecmd);\r\n  context.subscriptions.push(disposable);\r\n  context.subscriptions.push(mvvm);\r\n  context.subscriptions.push(mvcDisposable);\r\n}\r\n\r\nexport function deactivate() {\r\n  console.debug(\"Flutter Architecture Generator: Deactivated\");\r\n}\r\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["static","app_exceptions","network_api_services","api_store","base_api_services","api_response","status","static_variables","main","createMVCStructure","rootPath","forEach","dir","fullPath","path","join","fs","existsSync","mkdirSync","recursive","content","this","fileTemplates","file","filePath","dirname","writeFileSync","MVCYamalUtility","updateMVCPubspecYaml","vscode","window","showInformationMessage","dio","pubspecPath","pubspecContent","readFileSync","dependenciesMatch","match","index","length","pkg","version","Object","entries","requiredPackages","includes","flutterSdkMatch","position","slice","showErrorMessage","app_url","color","internet_exception_widget","loading_widget","network_image_widget","round_button","exceptions","routes","routes_name","utils","generated_plugin_registrant","ImportsManagerMvvm","Main","route","MvvmYamalUtility","fluttertoast","http","another_flushbar","cached_network_image","get_it","provider","shared_preferences","updateMvvmPubspecYaml","controller","featureName","toLowerCase","state","repository","ImportsManager","firebase_options","app_constant","global_variables","image_paths","static_data","custom_snackbar","custom_snakbar","shared_pref_helper","validation","custom_button","custom_textfield","error_route","route_transition","tab_bar_theme","text_theme","app_theme","color_scheme","Featurecontroller","FeatureState","FeatureRepository","YamalUtility","FeatureUtils","getFeatureName","showInputBox","placeHolder","prompt","createFeatureStructure","featurePath","folder","folderPath","controllerFilePath","stateFilePath","repositoryFilePath","controllerContent","stateContent","repositoryContent","str","charAt","toUpperCase","google_fonts","device_preview","flutter_svg","flutter_riverpod","image_picker","go_router","loader_overlay","fpdart","firebase_core","get","updatePubspecYaml","context","disposable","commands","registerCommand","async","workspaceFolders","workspace","uri","fsPath","architecture","files","fileContent","split","flag","featurecmd","mvvm","mvcDisposable","MVCManager","subscriptions","push","console","debug","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}